const puppeteer = require('puppeteer-extra');
const StealthPlugin = require('puppeteer-extra-plugin-stealth');
const winston = require('winston');
const path = require('path');
const fs = require('fs');

puppeteer.use(StealthPlugin());

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
const logger = winston.createLogger({
  level: 'info',
  format: winston.format.combine(
    winston.format.timestamp(),
    winston.format.json()
  ),
  transports: [
    new winston.transports.Console(),
    new winston.transports.File({ filename: 'playerok-bot.log' })
  ],
});

class PlayerOkBot {
  constructor() {
    this.browser = null;
    this.page = null;
    this.isLoggedIn = false;
    this.cookiesPath = path.join(__dirname, '../config/playerok-cookies.json');
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
   */
  async init() {
    try {
      logger.info('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PlayerOk –±–æ—Ç–∞...');

      this.browser = await puppeteer.launch({
        headless: false, // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏, –ø–æ—Ç–æ–º –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å true
        args: [
          '--no-sandbox',
          '--disable-setuid-sandbox',
          '--disable-blink-features=AutomationControlled',
          '--disable-features=IsolateOrigins,site-per-process'
        ],
      });

      this.page = await this.browser.newPage();

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º User-Agent
      await this.page.setUserAgent(
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36'
      );

      // –ó–∞–≥—Ä—É–∂–∞–µ–º cookies
      if (fs.existsSync(this.cookiesPath)) {
        const cookies = JSON.parse(fs.readFileSync(this.cookiesPath, 'utf8'));
        await this.page.setCookie(...cookies);
        logger.info('‚úÖ Cookies –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
      } else {
        logger.warn('‚ö†Ô∏è –§–∞–π–ª —Å cookies –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      await this.page.goto('https://playerok.com', { waitUntil: 'networkidle2' });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
      this.isLoggedIn = await this.checkAuth();

      if (this.isLoggedIn) {
        logger.info('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
      } else {
        logger.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è, –≤–æ–∑–º–æ–∂–Ω–æ cookies —É—Å—Ç–∞—Ä–µ–ª–∏');
      }

      return this.isLoggedIn;
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
      throw error;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
   */
  async checkAuth() {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–Ω—ã —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
      const userMenuExists = await this.page.evaluate(() => {
        // –ò—â–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –≤ —Ö–µ–¥–µ—Ä–µ
        const profileLink = document.querySelector('a[href*="/profile"]');
        const chatIcon = document.querySelector('a[href*="/chats"]');
        return profileLink !== null || chatIcon !== null;
      });

      return userMenuExists;
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
      return false;
    }
  }

  /**
   * –ü–æ–∏—Å–∫ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ PlayerOk
   * @param {string} itemName - –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä "Desert Eagle –û–∫—Å–∏–¥–Ω–æ–µ –ø–ª–∞–º—è")
   * @param {number} maxPrice - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
   * @returns {Object} –ü–µ—Ä–≤–æ–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ null
   */
  async searchItem(itemName, maxPrice = null) {
    try {
      logger.info(`üîç –ü–æ–∏—Å–∫ –ø—Ä–µ–¥–º–µ—Ç–∞: "${itemName}" (–º–∞–∫—Å. —Ü–µ–Ω–∞: ${maxPrice || '–Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞'}‚ÇΩ)`);

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É CS2 —Å–∫–∏–Ω–æ–≤ (–ü–†–ê–í–ò–õ–¨–ù–´–ô URL –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤)
      await this.page.goto('https://playerok.com/games/counter-strike-2/skins', {
        waitUntil: 'networkidle2',
        timeout: 30000
      });

      logger.info('‚úÖ –û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫–∏–Ω–æ–≤ CS2');

      // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—è –ø–æ–∏—Å–∫–∞ (–ü–†–ê–í–ò–õ–¨–ù–´–ô —Å–µ–ª–µ–∫—Ç–æ—Ä –∏–∑ HTML)
      await this.page.waitForSelector('input[name="search"]', { timeout: 10000 });

      // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ –∏ –≤–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ
      await this.page.click('input[name="search"]', { clickCount: 3 });
      await this.page.type('input[name="search"]', itemName, { delay: 100 });

      logger.info('‚úÖ –¢–µ–∫—Å—Ç –≤–≤–µ–¥–µ–Ω –≤ –ø–æ–∏—Å–∫');

      // –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–¥–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –ø–æ–¥–≥—Ä—É–∑–∫—É)
      await this.page.waitForTimeout(3000);

      // –ò—â–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
      const firstOffer = await this.page.evaluate((maxPrice) => {
        // –ò—â–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
        const cards = document.querySelectorAll('a[href*="/products/"]');

        for (const card of cards) {
          try {
            // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
            const name = card.textContent.trim();

            // –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É (–∏—â–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å —Ü–µ–Ω–æ–π –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏)
            const priceText = card.querySelector('[class*="price"]')?.textContent || '';
            const price = parseFloat(priceText.replace(/[^\d]/g, ''));

            // –ü–æ–ª—É—á–∞–µ–º URL
            const url = card.href;

            if (!price || !url) continue;

            // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω–µ
            if (maxPrice && price > maxPrice) {
              continue;
            }

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤–æ–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
            return {
              name: name,
              price: price,
              url: url
            };
          } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–∞—Ä—Ç–æ—á–∫–∏:', e);
          }
        }

        return null;
      }, maxPrice);

      if (!firstOffer) {
        logger.warn('‚ö†Ô∏è –ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É');
        return null;
      }

      logger.info(`‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: ${firstOffer.price}‚ÇΩ`);
      logger.info(`üîó URL: ${firstOffer.url}`);

      return firstOffer;
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞:', error);
      return null;
    }
  }

  /**
   * –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ü–µ–Ω —Å Steam –∏ ChiBox
   */
  comparePrices(playerokPrice, steamPrice, chiboxPrice) {
    const playerokFee = playerokPrice * 0.05; // 5% –∫–æ–º–∏—Å—Å–∏—è PlayerOk
    const totalCost = playerokPrice + playerokFee;

    const result = {
      playerok_price: playerokPrice,
      playerok_fee: playerokFee,
      total_cost: totalCost,
      steam_price: steamPrice,
      chibox_price: chiboxPrice,
      is_profitable: false,
      is_cheaper_than_steam: false,
      is_cheaper_than_chibox: false,
      profit_vs_chibox: 0,
      margin_percent: 0,
      decision: 'reject',
      reason: ''
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ—à–µ–≤–ª–µ –ª–∏ Steam
    result.is_cheaper_than_steam = totalCost <= steamPrice;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ—à–µ–≤–ª–µ –ª–∏ ChiBox
    result.is_cheaper_than_chibox = totalCost <= chiboxPrice;

    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–±—ã–ª—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ ChiBox
    result.profit_vs_chibox = chiboxPrice - totalCost;
    result.margin_percent = ((result.profit_vs_chibox / chiboxPrice) * 100).toFixed(2);

    // –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ –æ –ø–æ–∫—É–ø–∫–µ
    // –ü–†–ê–í–ò–õ–û: –ü–æ–∫—É–ø–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ü–µ–Ω–∞ –ù–ï –¥–æ—Ä–æ–∂–µ Steam –ò –ù–ï –¥–æ—Ä–æ–∂–µ ChiBox
    if (result.is_cheaper_than_steam && result.is_cheaper_than_chibox) {
      result.is_profitable = true;
      result.decision = 'buy';
      result.reason = `–í—ã–≥–æ–¥–Ω–æ! –ü—Ä–∏–±—ã–ª—å: ${result.profit_vs_chibox.toFixed(2)}‚ÇΩ (${result.margin_percent}%)`;
    } else if (!result.is_cheaper_than_steam) {
      result.decision = 'reject';
      result.reason = `–î–æ—Ä–æ–∂–µ Steam –Ω–∞ ${(totalCost - steamPrice).toFixed(2)}‚ÇΩ`;
    } else if (!result.is_cheaper_than_chibox) {
      result.decision = 'reject';
      result.reason = `–î–æ—Ä–æ–∂–µ ChiBox –Ω–∞ ${(totalCost - chiboxPrice).toFixed(2)}‚ÇΩ`;
    }

    return result;
  }

  /**
   * –ü–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ PlayerOk (–ü–û–õ–ù–´–ô –ü–†–û–¶–ï–°–° —Å–æ–≥–ª–∞—Å–Ω–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º)
   * @param {string} itemUrl - URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–µ–¥–º–µ—Ç–∞
   * @param {string} userTradeUrl - Steam Trade URL –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @returns {Object} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∫—É–ø–∫–µ
   */
  async purchaseItem(itemUrl, userTradeUrl) {
    try {
      logger.info(`üõí –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∫—É–ø–∫—É: ${itemUrl}`);

      // –®–ê–ì 1: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
      await this.page.goto(itemUrl, { waitUntil: 'networkidle2', timeout: 30000 });
      logger.info('‚úÖ –û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–æ–≤–∞—Ä–∞');

      // –®–ê–ì 2: –ù–∞–∂–∏–º–∞–µ–º –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç—å"
      await this.page.waitForTimeout(2000);

      // –ò—â–µ–º –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç—å" (–ø–æ —Ç–µ–∫—Å—Ç—É –∏–ª–∏ —Ü–≤–µ—Ç—É)
      const buyButtonClicked = await this.page.evaluate(() => {
        const buttons = Array.from(document.querySelectorAll('button'));
        const buyButton = buttons.find(btn =>
          btn.textContent.includes('–ö—É–ø–∏—Ç—å') ||
          btn.textContent.includes('–∫—É–ø–∏—Ç—å')
        );

        if (buyButton) {
          buyButton.click();
          return true;
        }
        return false;
      });

      if (!buyButtonClicked) {
        throw new Error('–ö–Ω–æ–ø–∫–∞ "–ö—É–ø–∏—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      }

      logger.info('‚úÖ –ö–Ω–æ–ø–∫–∞ "–ö—É–ø–∏—Ç—å" –Ω–∞–∂–∞—Ç–∞');

      // –®–ê–ì 3: –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      await this.page.waitForTimeout(2000);

      // –®–ê–ì 4: –í—Å—Ç–∞–≤–ª—è–µ–º Trade URL –≤ –ø–æ–ª–µ "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–æ–¥–∞–≤—Ü—É"
      // –ü–æ–ª–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ (–∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤–∏–¥–Ω–æ, —á—Ç–æ —Ç–∞–º –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ)
      const commentFieldFilled = await this.page.evaluate((tradeUrl) => {
        // –ò—â–µ–º –≤—Å–µ textarea –∏–ª–∏ input type="text" –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        const textFields = document.querySelectorAll('textarea, input[type="text"]');

        // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (–æ–±—ã—á–Ω–æ —ç—Ç–æ textarea –∏–ª–∏ input —Å placeholder)
        let commentField = null;
        for (const field of textFields) {
          const placeholder = field.placeholder || '';
          const label = field.closest('div')?.textContent || '';

          if (placeholder.includes('–∫–æ–º–º–µ–Ω—Ç') || label.includes('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π')) {
            commentField = field;
            break;
          }
        }

        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ placeholder, –±–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –ø–æ–ª–µ
        if (!commentField && textFields.length > 0) {
          commentField = textFields[0];
        }

        if (commentField) {
          commentField.value = tradeUrl;
          commentField.dispatchEvent(new Event('input', { bubbles: true }));
          commentField.dispatchEvent(new Event('change', { bubbles: true }));
          return true;
        }

        return false;
      }, userTradeUrl);

      if (!commentFieldFilled) {
        logger.warn('‚ö†Ô∏è –ü–æ–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ');
      } else {
        logger.info('‚úÖ Trade URL –≤—Å—Ç–∞–≤–ª–µ–Ω –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π');
      }

      await this.page.waitForTimeout(1000);

      // –®–ê–ì 5: –ù–∞–∂–∏–º–∞–µ–º —Å–∏–Ω—é—é –∫–Ω–æ–ø–∫—É "–î–∞–ª–µ–µ"
      const nextButtonClicked = await this.page.evaluate(() => {
        const buttons = Array.from(document.querySelectorAll('button'));
        const nextButton = buttons.find(btn =>
          btn.textContent.includes('–î–∞–ª–µ–µ') ||
          btn.textContent.includes('–¥–∞–ª–µ–µ')
        );

        if (nextButton) {
          nextButton.click();
          return true;
        }
        return false;
      });

      if (!nextButtonClicked) {
        throw new Error('–ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      }

      logger.info('‚úÖ –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ" –Ω–∞–∂–∞—Ç–∞');

      // –®–ê–ì 6: –ñ–¥–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
      await this.page.waitForTimeout(2000);

      // –®–ê–ì 7: –í–∫–ª—é—á–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å "–û–ø–ª–∞—Ç–∏—Ç—å —Å –±–∞–ª–∞–Ω—Å–∞"
      const balanceToggleEnabled = await this.page.evaluate(() => {
        // –ò—â–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å (–ø–æ —Å–∫—Ä–∏–Ω—à–æ—Ç—É —ç—Ç–æ MUI Switch)
        const switches = document.querySelectorAll('[role="switch"], input[type="checkbox"]');

        for (const switchEl of switches) {
          const parent = switchEl.closest('div');
          const text = parent?.textContent || '';

          if (text.includes('–±–∞–ª–∞–Ω—Å') || text.includes('–û–ø–ª–∞—Ç–∏—Ç—å —Å –±–∞–ª–∞–Ω—Å–∞')) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤–∫–ª—é—á–µ–Ω –ª–∏ —É–∂–µ
            if (switchEl.checked || switchEl.getAttribute('aria-checked') === 'true') {
              return true; // –£–∂–µ –≤–∫–ª—é—á–µ–Ω
            }

            // –ö–ª–∏–∫–∞–µ–º –Ω–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å
            switchEl.click();
            return true;
          }
        }

        return false;
      });

      if (!balanceToggleEnabled) {
        logger.warn('‚ö†Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –±–∞–ª–∞–Ω—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –≤–∫–ª—é—á–µ–Ω');
      } else {
        logger.info('‚úÖ –í—ã–±—Ä–∞–Ω–∞ –æ–ø–ª–∞—Ç–∞ —Å –±–∞–ª–∞–Ω—Å–∞');
      }

      await this.page.waitForTimeout(1000);

      // –®–ê–ì 8: –ù–∞–∂–∏–º–∞–µ–º —Å–∏–Ω—é—é –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ"
      const payButtonClicked = await this.page.evaluate(() => {
        const buttons = Array.from(document.querySelectorAll('button'));
        const payButton = buttons.find(btn =>
          btn.textContent.includes('–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ') ||
          btn.textContent.includes('–æ–ø–ª–∞—Ç–µ')
        );

        if (payButton) {
          payButton.click();
          return true;
        }
        return false;
      });

      if (!payButtonClicked) {
        throw new Error('–ö–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      }

      logger.info('‚úÖ –ö–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ" –Ω–∞–∂–∞—Ç–∞');

      // –®–ê–ì 9: –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–∫–∞–∑–∞
      await this.page.waitForTimeout(5000);

      // –ü–æ–ª—É—á–∞–µ–º URL —á–∞—Ç–∞ (–∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏)
      const currentUrl = this.page.url();
      logger.info(`üìç –¢–µ–∫—É—â–∏–π URL: ${currentUrl}`);

      // –®–ê–ì 10: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç (–∫–ª–∏–∫ –Ω–∞ –∏–∫–æ–Ω–∫—É —á–∞—Ç–∞)
      const chatOpened = await this.page.evaluate(() => {
        // –ò—â–µ–º –∫–Ω–æ–ø–∫—É/–∏–∫–æ–Ω–∫—É —á–∞—Ç–∞
        const chatButtons = Array.from(document.querySelectorAll('button, a'));
        const chatButton = chatButtons.find(btn => {
          const text = btn.textContent || '';
          const ariaLabel = btn.getAttribute('aria-label') || '';
          return text.includes('–ß–∞—Ç') || ariaLabel.includes('chat') || ariaLabel.includes('–ß–∞—Ç');
        });

        if (chatButton) {
          chatButton.click();
          return true;
        }

        // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ –∏—â–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç
        const chatLink = document.querySelector('a[href*="/chats/"]');
        if (chatLink) {
          chatLink.click();
          return true;
        }

        return false;
      });

      if (!chatOpened) {
        logger.warn('‚ö†Ô∏è –ß–∞—Ç –Ω–µ –æ—Ç–∫—Ä—ã—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –∏—â–µ–º –≤ URL');
      } else {
        logger.info('‚úÖ –ß–∞—Ç –æ—Ç–∫—Ä—ã—Ç');
      }

      await this.page.waitForTimeout(3000);

      // –®–ê–ì 11: –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º (–∫–Ω–æ–ø–∫–∞ "–ü–æ–Ω—è—Ç–Ω–æ, —Å–ø–∞—Å–∏–±–æ")
      const modalClosed = await this.page.evaluate(() => {
        const buttons = Array.from(document.querySelectorAll('button'));
        const okButton = buttons.find(btn =>
          btn.textContent.includes('–ü–æ–Ω—è—Ç–Ω–æ') ||
          btn.textContent.includes('—Å–ø–∞—Å–∏–±–æ')
        );

        if (okButton) {
          okButton.click();
          return true;
        }
        return false;
      });

      if (modalClosed) {
        logger.info('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
      }

      await this.page.waitForTimeout(2000);

      // –®–ê–ì 12: –í—Å—Ç–∞–≤–ª—è–µ–º Trade URL –≤ —á–∞—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
      const messageSent = await this.page.evaluate((tradeUrl) => {
        // –ò—â–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        const messageInput = document.querySelector('textarea[placeholder*="–°–æ–æ–±—â–µ–Ω–∏–µ"], input[placeholder*="—Å–æ–æ–±—â–µ–Ω–∏–µ"]');

        if (messageInput) {
          messageInput.value = tradeUrl;
          messageInput.dispatchEvent(new Event('input', { bubbles: true }));
          messageInput.dispatchEvent(new Event('change', { bubbles: true }));

          // –ò—â–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
          const sendButton = messageInput.closest('form')?.querySelector('button[type="submit"]') ||
                            document.querySelector('button[aria-label*="send"], button[aria-label*="–æ—Ç–ø—Ä–∞–≤–∏—Ç—å"]');

          if (sendButton) {
            sendButton.click();
            return true;
          }
        }

        return false;
      }, userTradeUrl);

      if (!messageSent) {
        logger.warn('‚ö†Ô∏è Trade URL –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
      } else {
        logger.info('‚úÖ Trade URL –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞');
      }

      // –ò–∑–≤–ª–µ–∫–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ URL
      const chatId = currentUrl.match(/chats\/([a-f0-9-]+)/)?.[1] || 'unknown';

      logger.info(`‚úÖ –ü–æ–∫—É–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! Chat ID: ${chatId}`);

      return {
        success: true,
        chat_id: chatId,
        chat_url: currentUrl,
        message: '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞, Trade URL –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç'
      };

    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞:', error);

      // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      try {
        await this.page.screenshot({
          path: `error-${Date.now()}.png`,
          fullPage: true
        });
        logger.info('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
      } catch (screenshotError) {
        logger.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç:', screenshotError);
      }

      return {
        success: false,
        error: error.message
      };
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ Trade URL –≤ —á–∞—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞ (–£–°–¢–ê–†–ï–í–®–ò–ô –ú–ï–¢–û–î - —Ç–µ–ø–µ—Ä—å –≤ purchaseItem)
   * @deprecated –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ purchaseItem(), –∫–æ—Ç–æ—Ä—ã–π –≤–∫–ª—é—á–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –≤ —á–∞—Ç
   */
  async sendTradeUrlToSeller(chatId, userTradeUrl) {
    try {
      logger.info(`üí¨ –û—Ç–ø—Ä–∞–≤–∫–∞ Trade URL –≤ —á–∞—Ç ${chatId}`);

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç
      const chatUrl = `https://playerok.com/chats/${chatId}`;
      await this.page.goto(chatUrl, { waitUntil: 'networkidle2' });

      await this.page.waitForTimeout(2000);

      // –í–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Trade URL
      const messageSent = await this.page.evaluate((tradeUrl) => {
        const messageInput = document.querySelector('textarea[placeholder*="–°–æ–æ–±—â–µ–Ω–∏–µ"], input[placeholder*="—Å–æ–æ–±—â–µ–Ω–∏–µ"]');

        if (messageInput) {
          const message = `Trade URL: ${tradeUrl}`;
          messageInput.value = message;
          messageInput.dispatchEvent(new Event('input', { bubbles: true }));

          const sendButton = messageInput.closest('form')?.querySelector('button[type="submit"]');
          if (sendButton) {
            sendButton.click();
            return true;
          }
        }
        return false;
      }, userTradeUrl);

      if (messageSent) {
        logger.info('‚úÖ Trade URL –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç');
        return { success: true };
      } else {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ');
      }

    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Trade URL:', error);
      return { success: false, error: error.message };
    }
  }

  /**
   * –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–∞—Ç–∞ —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
   */
  async monitorOrder(orderNumber) {
    try {
      logger.info(`üëÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–∫–∞–∑–∞ ${orderNumber}`);

      await this.page.goto(`https://playerok.com/orders/${orderNumber}`, { waitUntil: 'networkidle2' });

      const status = await this.page.evaluate(() => {
        const statusElement = document.querySelector('[data-testid="order-status"], .order-status');
        return statusElement ? statusElement.textContent.trim() : 'unknown';
      });

      logger.info(`üìä –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ ${orderNumber}: ${status}`);

      return {
        order_number: orderNumber,
        status,
        timestamp: new Date()
      };
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–∫–∞–∑–∞:', error);
      return null;
    }
  }

  /**
   * –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
   */
  async close() {
    if (this.browser) {
      await this.browser.close();
      logger.info('üîí –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
    }
  }
}

module.exports = PlayerOkBot;
