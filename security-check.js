#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîí –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...\n');

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ npm audit
console.log('üìã 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö (npm audit)...');
try {
  const auditResult = execSync('npm audit --json', { encoding: 'utf8' });
  const audit = JSON.parse(auditResult);

  if (audit.vulnerabilities && Object.keys(audit.vulnerabilities).length > 0) {
    console.log('‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö:');
    Object.entries(audit.vulnerabilities).forEach(([pkg, vuln]) => {
      console.log(`   - ${pkg}: ${vuln.severity} (${vuln.range})`);
    });
  } else {
    console.log('‚úÖ –£—è–∑–≤–∏–º–æ—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  }
} catch (error) {
  console.log('‚ùå –ù–∞–π–¥–µ–Ω—ã —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö (–∑–∞–ø—É—Å—Ç–∏—Ç–µ npm audit –¥–ª—è –¥–µ—Ç–∞–ª–µ–π)');
}

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint Security
console.log('\nüìã 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞ (ESLint Security)...');
try {
  const lintResult = execSync('npx eslint . --ext .js --format json', { encoding: 'utf8' });
  const lintData = JSON.parse(lintResult);

  const securityIssues = lintData.filter(file =>
    file.messages.some(msg => msg.ruleId && msg.ruleId.startsWith('security/'))
  );

  if (securityIssues.length > 0) {
    console.log('‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –∫–æ–¥–µ:');
    securityIssues.forEach(file => {
      console.log(`   –§–∞–π–ª: ${file.filePath}`);
      file.messages.forEach(msg => {
        if (msg.ruleId && msg.ruleId.startsWith('security/')) {
          console.log(`     - –°—Ç—Ä–æ–∫–∞ ${msg.line}: ${msg.message}`);
        }
      });
    });
  } else {
    console.log('‚úÖ –ü—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –∫–æ–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  }
} catch (error) {
  console.log('‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–¥–µ (–∑–∞–ø—É—Å—Ç–∏—Ç–µ npm run security-lint –¥–ª—è –¥–µ—Ç–∞–ª–µ–π)');
}

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('\nüìã 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
const requiredEnvVars = [
  'JWT_SECRET',
  'ENCRYPTION_KEY',
  'DB_HOST',
  'DB_USER',
  'DB_PASSWORD',
  'DB_NAME'
];

const missingEnvVars = requiredEnvVars.filter(envVar => !process.env[envVar]);
if (missingEnvVars.length > 0) {
  console.log('‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  missingEnvVars.forEach(envVar => console.log(`   - ${envVar}`));
} else {
  console.log('‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
}

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ JWT_SECRET
if (process.env.JWT_SECRET && process.env.JWT_SECRET.length < 32) {
  console.log('‚ö†Ô∏è  JWT_SECRET —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞)');
} else if (process.env.JWT_SECRET) {
  console.log('‚úÖ JWT_SECRET –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –¥–ª–∏–Ω—É');
}

// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤
console.log('\nüìã 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤...');
const sensitiveFiles = [
  'config/secrets.js',
  'config/config.js',
  '.env',
  '.env.local',
  '.env.production'
];

sensitiveFiles.forEach(file => {
  const filePath = path.join(__dirname, file);
  if (fs.existsSync(filePath)) {
    const stats = fs.statSync(filePath);
    const permissions = (stats.mode & parseInt('777', 8)).toString(8);
    if (permissions !== '600' && permissions !== '644') {
      console.log(`‚ö†Ô∏è  –ù–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è ${file}: ${permissions}`);
    }
  }
});

// 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤
console.log('\nüìã 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤...');
const filesToCheck = [
  'controllers/user/login.js',
  'controllers/user/register.js',
  'controllers/user/updateProfile.js'
];

filesToCheck.forEach(file => {
  const filePath = path.join(__dirname, file);
  if (fs.existsSync(filePath)) {
    const content = fs.readFileSync(filePath, 'utf8');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ typeof –ø—Ä–æ–≤–µ—Ä–æ–∫
    if (!content.includes('typeof') || !content.includes('!== \'string\'')) {
      console.log(`‚ö†Ô∏è  ${file}: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–∏–ø–æ–≤`);
    } else {
      console.log(`‚úÖ ${file}: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–∏–ø–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ .trim() –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–∞
    const unsafeTrimMatch = content.match(/(\w+)\.trim\(\)/g);
    if (unsafeTrimMatch) {
      const lines = content.split('\n');
      unsafeTrimMatch.forEach(match => {
        const lineIndex = lines.findIndex(line => line.includes(match));
        if (lineIndex > -1) {
          const prevLines = lines.slice(Math.max(0, lineIndex - 3), lineIndex).join(' ');
          if (!prevLines.includes('typeof') && !prevLines.includes('string')) {
            console.log(`‚ö†Ô∏è  ${file}: –°—Ç—Ä–æ–∫–∞ ${lineIndex + 1}: –ù–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ .trim()`);
          }
        }
      });
    }
  }
});

// 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è HTTPS
console.log('\nüìã 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...');
try {
  const appContent = fs.readFileSync(path.join(__dirname, 'app.js'), 'utf8');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ helmet
  if (!appContent.includes('helmet')) {
    console.log('‚ö†Ô∏è  –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è middleware helmet –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤');
  } else {
    console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è helmet middleware');
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º rate limiting
  if (!appContent.includes('rate-limit') && !appContent.includes('rateLimit')) {
    console.log('‚ö†Ô∏è  –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ (rate limiting)');
  } else {
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤');
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º CORS
  if (!appContent.includes('cors')) {
    console.log('‚ö†Ô∏è  CORS –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
  } else {
    console.log('‚úÖ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  }

} catch (error) {
  console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å app.js');
}

console.log('\nüîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('\nüìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
console.log('   1. –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm update');
console.log('   2. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏: npm audit fix');
console.log('   3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Å–µ–∫—Ä–µ—Ç–æ–≤');
console.log('   4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ');
console.log('   5. –†–µ–≥—É–ª—è—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏');
