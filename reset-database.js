// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
require('dotenv').config();
const { Sequelize } = require('sequelize');

console.log('=== –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –°–ö–†–ò–ü–¢ –°–ë–†–û–°–ê –ë–î ===');

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Å—Ç—Ä–æ–∫–∏
const dbConfig = {
  username: String(process.env.DB_USERNAME || 'postgres'),
  password: String(process.env.DB_PASSWORD || ''),
  database: String(process.env.DB_DATABASE || 'chibox-game'),
  host: String(process.env.DB_HOST || '127.0.0.1'),
  dialect: String(process.env.DB_DIALECT || 'postgres')
};

console.log('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–î:');
console.log('- username:', dbConfig.username);
console.log('- password:', '***' + (dbConfig.password ? ' (–∑–∞–¥–∞–Ω)' : ' (–ø—É—Å—Ç–æ–π)'));
console.log('- database:', dbConfig.database);
console.log('- host:', dbConfig.host);
console.log('- dialect:', dbConfig.dialect);

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ postgres (–±–∞–∑–æ–≤–∞—è –ë–î, –∫–æ—Ç–æ—Ä–∞—è –≤—Å–µ–≥–¥–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
const adminDb = new Sequelize('postgres', dbConfig.username, dbConfig.password, {
  host: dbConfig.host,
  dialect: dbConfig.dialect,
  logging: console.log
});

async function resetDatabase() {
  console.log('\n–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL...');
    await adminDb.authenticate();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.');

    // –£–¥–∞–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    console.log(`\n–£–¥–∞–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö "${dbConfig.database}", –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...`);
    try {
      await adminDb.query(`DROP DATABASE IF EXISTS "${dbConfig.database}" WITH (FORCE);`);
      console.log(`‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö "${dbConfig.database}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${error.message}`);

      // –ü—Ä–æ–±—É–µ–º –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥
      console.log('–ü—Ä–æ–±—É–µ–º –æ—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ —É–¥–∞–ª–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ...');
      try {
        // –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await adminDb.query(`
          SELECT pg_terminate_backend(pg_stat_activity.pid)
          FROM pg_stat_activity
          WHERE pg_stat_activity.datname = '${dbConfig.database}'
          AND pid <> pg_backend_pid();
        `);
        console.log('‚úÖ –í—Å–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã.');

        // –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å–Ω–æ–≤–∞
        await adminDb.query(`DROP DATABASE IF EXISTS "${dbConfig.database}";`);
        console.log(`‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö "${dbConfig.database}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.`);
      } catch (innerError) {
        console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: ${innerError.message}`);
        throw innerError;
      }
    }

    // –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∑–∞–Ω–æ–≤–æ
    console.log(`\n–°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö "${dbConfig.database}"...`);
    await adminDb.query(`CREATE DATABASE "${dbConfig.database}";`);
    console.log(`‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö "${dbConfig.database}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.`);

    console.log('\nüéâ –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω.');
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:');
    console.error('- message:', error.message);
    console.error('- name:', error.name);
    if (error.parent) {
      console.error('- parent message:', error.parent.message);
    }
    throw error;
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await adminDb.close();
    console.log('\nüîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
resetDatabase()
  .then(() => {
    console.log('\n‚úÖ –°–∫—Ä–∏–ø—Ç —Å–±—Ä–æ—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω.');
    process.exit(0);
  })
  .catch(error => {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞ —Å–±—Ä–æ—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
    process.exit(1);
  });
