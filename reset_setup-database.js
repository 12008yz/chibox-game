const { sequelize } = require('./models');

async function resetDatabase() {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await sequelize.authenticate();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
    await sequelize.query('DROP SCHEMA public CASCADE;');
    console.log('‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Å—Ö–µ–º–∞ public');

    // –°–æ–∑–¥–∞–µ–º —Å—Ö–µ–º—É –∑–∞–Ω–æ–≤–æ
    await sequelize.query('CREATE SCHEMA public;');
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ö–µ–º–∞ public');

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
    await sequelize.query('GRANT ALL ON SCHEMA public TO postgres;');
    await sequelize.query('GRANT ALL ON SCHEMA public TO public;');
    console.log('‚úÖ –ü—Ä–∞–≤–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');

    console.log('\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–±—Ä–æ—à–µ–Ω–∞!');
    console.log('\nüìù –¢–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏:');
    console.log('   npx sequelize-cli db:migrate');

    await sequelize.close();
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ë–î:', error);
    await sequelize.close();
    process.exit(1);
  }
}

resetDatabase();
