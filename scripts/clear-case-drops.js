const db = require('../models');
const { logger } = require('../utils/logger');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∑–∞–ø–∏—Å–µ–π –≤—ã–ø–∞–≤—à–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–∑ –∫–µ–π—Å–æ–≤
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 *
 * 1. –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–µ–π—Å–æ–≤:
 *    node scripts/clear-case-drops.js --all
 *
 * 2. –û—á–∏—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
 *    node scripts/clear-case-drops.js --user-id <user_id>
 *
 * 3. –û—á–∏—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–µ–π—Å–∞:
 *    node scripts/clear-case-drops.js --case-template-id <case_template_id>
 *
 * 4. –û—á–∏—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–µ–π—Å–∞:
 *    node scripts/clear-case-drops.js --user-id <user_id> --case-template-id <case_template_id>
 *
 * 5. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è:
 *    node scripts/clear-case-drops.js --stats
 */

async function main() {
  try {
    const args = process.argv.slice(2);

    // –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    const flags = {
      all: args.includes('--all'),
      stats: args.includes('--stats'),
      userId: getArgValue(args, '--user-id'),
      caseTemplateId: getArgValue(args, '--case-template-id'),
    };

    console.log('üéÆ –°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –∑–∞—á—ë—Ä–∫–Ω—É—Ç—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–∑ –∫–µ–π—Å–æ–≤');
    console.log('===============================================');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    await showStatistics();

    if (flags.stats) {
      console.log('\n‚úÖ –ü–æ–∫–∞–∑–∞–Ω–∞ —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)');
      process.exit(0);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–∫–∞–∑–∞–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    if (!flags.all && !flags.userId && !flags.caseTemplateId) {
      console.log('\n‚ùå –û—à–∏–±–∫–∞: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏');
      console.log('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏');
      showHelp();
      process.exit(1);
    }

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    if (!await confirmAction(flags)) {
      console.log('\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
      process.exit(0);
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É
    const deletedCount = await performCleanup(flags);

    console.log(`\n‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${deletedCount}`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:');
    await showStatistics();

  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ –æ—á–∏—Å—Ç–∫–∏:', error);
    console.error('\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  } finally {
    await db.sequelize.close();
  }
}

function getArgValue(args, flag) {
  const index = args.indexOf(flag);
  return index !== -1 && index + 1 < args.length ? args[index + 1] : null;
}

async function showStatistics() {
  try {
    // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const totalDrops = await db.CaseItemDrop.count();

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    const userStats = await db.CaseItemDrop.findAll({
      attributes: [
        'user_id',
        [db.sequelize.fn('COUNT', '*'), 'drop_count']
      ],
      group: ['user_id'],
      order: [[db.sequelize.literal('drop_count'), 'DESC']],
      limit: 10,
      include: [{
        model: db.User,
        as: 'user',
        attributes: ['username', 'email']
      }]
    });

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–µ–π—Å–∞–º
    const caseStats = await db.CaseItemDrop.findAll({
      attributes: [
        'case_template_id',
        [db.sequelize.fn('COUNT', '*'), 'drop_count']
      ],
      group: ['case_template_id'],
      order: [[db.sequelize.literal('drop_count'), 'DESC']],
      limit: 10,
      include: [{
        model: db.CaseTemplate,
        as: 'case_template',
        attributes: ['name', 'type']
      }]
    });

    console.log('\nüìä –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤—ã–ø–∞–≤—à–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${totalDrops}`);

    console.log('\nüë• –¢–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–ø–∏—Å–µ–π:');
    userStats.forEach((stat, index) => {
      const username = stat.user?.username || stat.user?.email || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
      console.log(`   ${index + 1}. ${username} (${stat.user_id.slice(0, 8)}...): ${stat.dataValues.drop_count} –∑–∞–ø–∏—Å–µ–π`);
    });

    console.log('\nüì¶ –¢–æ–ø-10 –∫–µ–π—Å–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–ø–∏—Å–µ–π:');
    caseStats.forEach((stat, index) => {
      const caseName = stat.case_template?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–µ–π—Å';
      console.log(`   ${index + 1}. ${caseName}: ${stat.dataValues.drop_count} –∑–∞–ø–∏—Å–µ–π`);
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error.message);
  }
}

async function confirmAction(flags) {
  let description = '';

  if (flags.all) {
    description = '–í–°–ï –∑–∞–ø–∏—Å–∏ –≤—ã–ø–∞–≤—à–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –í–°–ï–• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–µ–π—Å–æ–≤';
  } else if (flags.userId && flags.caseTemplateId) {
    description = `–∑–∞–ø–∏—Å–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${flags.userId} –∏ –∫–µ–π—Å–∞ ${flags.caseTemplateId}`;
  } else if (flags.userId) {
    description = `–í–°–ï –∑–∞–ø–∏—Å–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${flags.userId}`;
  } else if (flags.caseTemplateId) {
    description = `–í–°–ï –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–µ–π—Å–∞ ${flags.caseTemplateId}`;
  }

  console.log(`\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï! –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã: ${description}`);
  console.log('   –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!');
  console.log('   –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç —Å–Ω–æ–≤–∞ –ø–æ–ª—É—á–∞—Ç—å —ç—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –∫–µ–π—Å–æ–≤.');

  // –í production –æ–∫—Ä—É–∂–µ–Ω–∏–∏ —Ç—Ä–µ–±—É–µ–º —è–≤–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  if (process.env.NODE_ENV === 'production') {
    const readline = require('readline');
    const rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout
    });

    return new Promise((resolve) => {
      rl.question('\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? –í–≤–µ–¥–∏—Ç–µ "YES" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ', (answer) => {
        rl.close();
        resolve(answer === 'YES');
      });
    });
  } else {
    console.log('\n‚ö° –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...');
    return true;
  }
}

async function performCleanup(flags) {
  const whereClause = {};

  // –§–æ—Ä–º–∏—Ä—É–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
  if (flags.userId) {
    whereClause.user_id = flags.userId;
  }

  if (flags.caseTemplateId) {
    whereClause.case_template_id = flags.caseTemplateId;
  }

  // –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω --all –∏ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –Ω–µ —É–¥–∞–ª—è–µ–º –Ω–∏—á–µ–≥–æ
  if (!flags.all && Object.keys(whereClause).length === 0) {
    throw new Error('–ù–µ —É–∫–∞–∑–∞–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏');
  }

  console.log('\nüóëÔ∏è  –í—ã–ø–æ–ª–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ...');
  console.log('   –£—Å–ª–æ–≤–∏—è:', JSON.stringify(whereClause, null, 2));

  // –í—ã–ø–æ–ª–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
  const deletedCount = await db.CaseItemDrop.destroy({
    where: whereClause
  });

  return deletedCount;
}

function showHelp() {
  console.log(`
üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:

node scripts/clear-case-drops.js [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  --all                              –û—á–∏—Å—Ç–∏—Ç—å –í–°–ï –∑–∞–ø–∏—Å–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–µ–π—Å–æ–≤
  --user-id <user_id>               –û—á–∏—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  --case-template-id <template_id>   –û—á–∏—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–µ–π—Å–∞
  --stats                           –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è)
  --help                            –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

1. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:
   node scripts/clear-case-drops.js --stats

2. –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
   node scripts/clear-case-drops.js --user-id 12345678-1234-1234-1234-123456789012

3. –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–µ–π—Å–∞:
   node scripts/clear-case-drops.js --case-template-id 87654321-4321-4321-4321-210987654321

4. –û—á–∏—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–µ–π—Å–∞:
   node scripts/clear-case-drops.js --user-id 12345678-1234-1234-1234-123456789012 --case-template-id 87654321-4321-4321-4321-210987654321

5. –û–ü–ê–°–ù–û! –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏:
   node scripts/clear-case-drops.js --all

‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï:
- –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!
- –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç —Å–Ω–æ–≤–∞ –ø–æ–ª—É—á–∞—Ç—å —ç—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –∫–µ–π—Å–æ–≤
- –í production —Ä–µ–∂–∏–º–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ "YES"
`);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–∞ —Å–ø—Ä–∞–≤–∫—É
if (process.argv.includes('--help') || process.argv.includes('-h')) {
  showHelp();
  process.exit(0);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main();
