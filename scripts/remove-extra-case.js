const db = require('../models');

async function removeExtraCase() {
  try {
    console.log('üîç –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –ø–ª–∞—Ç–Ω—ã—Ö –∫–µ–π—Å–æ–≤...');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–ª–∞—Ç–Ω—ã–µ –∫–µ–π—Å—ã
    const paidCases = await db.CaseTemplate.findAll({
      where: {
        is_active: true,
        price: { [db.Sequelize.Op.gt]: 0 }
      },
      order: [['created_at', 'ASC']]
    });

    console.log(`\nüì¶ –ù–∞–π–¥–µ–Ω–æ ${paidCases.length} –ø–ª–∞—Ç–Ω—ã—Ö –∫–µ–π—Å–æ–≤:\n`);
    paidCases.forEach((c, i) => {
      console.log(`${i + 1}. ${c.name} - ${c.price}‚ÇΩ (ID: ${c.id})`);
    });

    // –ò—â–µ–º "–ü–æ–∫—É–ø–Ω–æ–π –∫–µ–π—Å" –∏–ª–∏ –ª–∏—à–Ω–∏–µ –∫–µ–π—Å—ã
    const knownCaseIds = [
      '66666666-6666-6666-6666-666666666666', // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–µ–π—Å
      '77777777-7777-7777-7777-777777777777'  // –ü—Ä–µ–º–∏—É–º –∫–µ–π—Å
    ];

    const extraCases = paidCases.filter(c => !knownCaseIds.includes(c.id));

    if (extraCases.length > 0) {
      console.log(`\n‚ùå –ù–∞–π–¥–µ–Ω–æ ${extraCases.length} –ª–∏—à–Ω–∏—Ö –∫–µ–π—Å–æ–≤:`);

      for (const extraCase of extraCases) {
        console.log(`\n–£–¥–∞–ª–µ–Ω–∏–µ: ${extraCase.name} (${extraCase.price}‚ÇΩ)`);

        // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–µ–π—Å –≤–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è
        await extraCase.update({ is_active: false });
        console.log(`‚úÖ –ö–µ–π—Å "${extraCase.name}" –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω`);
      }
    } else {
      console.log('\n‚úÖ –õ–∏—à–Ω–∏—Ö –∫–µ–π—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }

    console.log('\nüéâ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

removeExtraCase();
