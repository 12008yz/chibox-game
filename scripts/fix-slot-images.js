const db = require('../models');
const { parseImageFromSteamPage, isValidSteamImageUrl } = require('./parse-item-images');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É Steam Market
function isSteamMarketPageUrl(url) {
  if (!url || typeof url !== 'string') return false;
  return url.includes('steamcommunity.com/market/listings/730/');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
async function fixAllItemImages() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');

  try {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    const itemsWithBadImages = await db.Item.findAll({
      where: {
        image_url: {
          [db.Sequelize.Op.like]: '%steamcommunity.com/market/listings/730/%'
        }
      }
    });

    console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${itemsWithBadImages.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏`);

    if (itemsWithBadImages.length === 0) {
      console.log('‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
      return;
    }

    let processed = 0;
    let fixed = 0;
    let errors = 0;

    for (const item of itemsWithBadImages) {
      processed++;

      console.log(`\nüîÑ [${processed}/${itemsWithBadImages.length}] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${item.name}`);

      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        if (!isSteamMarketPageUrl(item.image_url)) {
          console.log(`‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${item.image_url}`);
          continue;
        }

        // –ü–∞—Ä—Å–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        console.log(`üñºÔ∏è  –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è: ${item.steam_market_hash_name || item.name}`);
        const correctImageUrl = await parseImageFromSteamPage(item.image_url);

        if (correctImageUrl && isValidSteamImageUrl(correctImageUrl)) {
          // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
          await item.update({ image_url: correctImageUrl });
          console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ${item.name}`);
          console.log(`   –°—Ç–∞—Ä–æ–µ: ${item.image_url}`);
          console.log(`   –ù–æ–≤–æ–µ:  ${correctImageUrl}`);
          fixed++;
        } else {
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
          const defaultImage = 'https://community.fastly.steamstatic.com/economy/image/6TMcQ7eX6E0EZl2byXi7vaVtMyCbg7JT9Nj26yLB0uiTHKECVqCQJYPQOiKc1A9hdeGdqRmPbEbD8Q_VfQ/256fx256f';
          await item.update({ image_url: defaultImage });
          console.log(`‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è: ${item.name}`);
          fixed++;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å Steam
        await new Promise(resolve => setTimeout(resolve, 1000));

      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${item.name}:`, error.message);
        errors++;

        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        try {
          const defaultImage = 'https://community.fastly.steamstatic.com/economy/image/6TMcQ7eX6E0EZl2byXi7vaVtMyCbg7JT9Nj26yLB0uiTHKECVqCQJYPQOiKc1A9hdeGdqRmPbEbD8Q_VfQ/256fx256f';
          await item.update({ image_url: defaultImage });
          console.log(`üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è: ${item.name}`);
        } catch (updateError) {
          console.error(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ${item.name}:`, updateError.message);
        }
      }

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 –ø—Ä–µ–¥–º–µ—Ç–æ–≤
      if (processed % 10 === 0) {
        console.log(`\nüìä –ü—Ä–æ–≥—Ä–µ—Å—Å: ${processed}/${itemsWithBadImages.length} | –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ${fixed} | –û—à–∏–±–æ–∫: ${errors}`);
      }
    }

    console.log(`\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`);
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${processed}`);
    console.log(`   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ${fixed}`);
    console.log(`   - –û—à–∏–±–æ–∫: ${errors}`);

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    throw error;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
async function fixSpecificItemImage(itemName) {
  console.log(`üîç –ò—â–µ–º –ø—Ä–µ–¥–º–µ—Ç: ${itemName}`);

  try {
    const item = await db.Item.findOne({
      where: {
        [db.Sequelize.Op.or]: [
          { name: { [db.Sequelize.Op.iLike]: `%${itemName}%` } },
          { steam_market_hash_name: { [db.Sequelize.Op.iLike]: `%${itemName}%` } }
        ]
      }
    });

    if (!item) {
      console.log(`‚ùå –ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${itemName}`);
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: ${item.name}`);
    console.log(`   –¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${item.image_url}`);

    if (!isSteamMarketPageUrl(item.image_url)) {
      console.log(`‚ÑπÔ∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ Steam Market`);
      return;
    }

    console.log(`üîÑ –ü–∞—Ä—Å–∏–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...`);
    const correctImageUrl = await parseImageFromSteamPage(item.image_url);

    if (correctImageUrl && isValidSteamImageUrl(correctImageUrl)) {
      await item.update({ image_url: correctImageUrl });
      console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!`);
      console.log(`   –ù–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${correctImageUrl}`);
    } else {
      const defaultImage = 'https://community.fastly.steamstatic.com/economy/image/6TMcQ7eX6E0EZl2byXi7vaVtMyCbg7JT9Nj26yLB0uiTHKECVqCQJYPQOiKc1A9hdeGdqRmPbEbD8Q_VfQ/256fx256f';
      await item.update({ image_url: defaultImage });
      console.log(`‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ`);
    }

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è ${itemName}:`, error.message);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
module.exports = {
  fixAllItemImages,
  fixSpecificItemImage
};

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  (async () => {
    try {
      const itemName = process.argv[2];

      if (itemName) {
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
        await fixSpecificItemImage(itemName);
      } else {
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        await fixAllItemImages();
      }
    } catch (error) {
      console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
    } finally {
      process.exit(0);
    }
  })();
}
