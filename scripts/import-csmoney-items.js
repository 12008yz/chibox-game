const CSMoneyService = require('../services/csmoneyService');
const db = require('../models');

async function importWithBrowser() {
  let csmoneyService = null;

  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä...');

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    const config = CSMoneyService.loadConfig();
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    console.log(`üë§ Steam ID: ${config.steamId || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
    console.log(`üåê User-Agent: ${config.userAgent ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é'}`);

    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
    csmoneyService = new CSMoneyService(config);

    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞...');
    await csmoneyService.initialize();

    if (!csmoneyService.isLoggedIn) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞ CS.Money');
      console.log('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å cookies');
      return;
    }

    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –Ω–∞ CS.Money');
    console.log('üåê –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã —á–µ—Ä–µ–∑ API...');

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã —á–µ—Ä–µ–∑ API endpoint
    const limit = 60; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∑–∞ –æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ API)
    let offset = 0;
    const maxItems = 500; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
    let allItems = [];

    while (allItems.length < maxItems) {
      const apiUrl = `https://cs.money/2.0/market/sell-orders/?limit=${limit}&offset=${offset}`;
      console.log(`üì° –ó–∞–ø—Ä–æ—Å –∫ API: ${apiUrl} (offset: ${offset})`);

      try {
        await csmoneyService.page.goto(apiUrl, {
          waitUntil: 'networkidle2',
          timeout: 30000
        });

        // –ü–æ–ª—É—á–∞–µ–º JSON –æ—Ç–≤–µ—Ç —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const jsonResponse = await csmoneyService.page.evaluate(() => {
          try {
            return JSON.parse(document.body.innerText);
          } catch {
            return null;
          }
        });

        if (jsonResponse && jsonResponse.items && Array.isArray(jsonResponse.items)) {
          console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${jsonResponse.items.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å offset ${offset}`);
          allItems.push(...jsonResponse.items);

          // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –º–µ–Ω—å—à–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —á–µ–º limit, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
          if (jsonResponse.items.length < limit) {
            console.log('üìÑ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤');
            break;
          }

          offset += limit;
          await new Promise(resolve => setTimeout(resolve, 1000)); // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        } else {
          console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞');
          console.log('üîç –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', JSON.stringify(jsonResponse).substring(0, 200));
          break;
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ API: ${error.message}`);
        break;
      }
    }

    console.log(`üì¶ –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${allItems.length}`);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const interceptedData = allItems;

    console.log(`\nüìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${interceptedData.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ API`);



    if (interceptedData.length === 0) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ API, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');

      // Fallback: –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      const pageItems = await csmoneyService.page.evaluate(() => {
        const items = [];
        const itemElements = document.querySelectorAll('[data-testid="market-item"], .market-item, .item-card');

        itemElements.forEach((element, index) => {
          try {
            const nameEl = element.querySelector('[data-testid="item-name"], .item-name, .name');
            const priceEl = element.querySelector('[data-testid="item-price"], .item-price, .price');
            const imageEl = element.querySelector('img');

            const name = nameEl?.textContent?.trim() || `Item ${index + 1}`;
            const priceText = priceEl?.textContent?.trim() || '0';
            const priceMatch = priceText.match(/[\d.,]+/);
            const price = priceMatch ? parseFloat(priceMatch[0].replace(',', '.')) : 0;
            const image = imageEl?.src || imageEl?.getAttribute('data-src') || '';

            items.push({
              id: `page_${Date.now()}_${index}`,
              name: name,
              price: price,
              image: image,
              source: 'page_parsing'
            });
          } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ ${index}:`, error);
          }
        });

        return items;
      });

      console.log(`üìÑ –ü–æ–ª—É—á–µ–Ω–æ ${pageItems.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã`);
      interceptedData.push(...pageItems);
    }

    if (interceptedData.length === 0) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∏ —á–µ—Ä–µ–∑ API, –Ω–∏ —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥');
      return;
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log('\nüîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    console.log(`üìä –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${interceptedData.length}`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Å—ã—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (interceptedData.length > 0) {
      console.log('üîç –ü—Ä–∏–º–µ—Ä —Å—ã—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö:');
      console.log(JSON.stringify(interceptedData[0], null, 2).substring(0, 500) + '...');
    }

    const formattedItems = interceptedData.map(item => {
      // –î–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –Ω–∞–ø—Ä—è–º—É—é –∫–∞–∫ –æ–±—ä–µ–∫—Ç—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤
      // –°—Ç—Ä—É–∫—Ç—É—Ä–∞: { id, asset: { names, images, ... }, pricing, stickers, etc }

      if (item.asset) {
        const fullName = item.asset?.names?.full || '';
        let exterior = null;
        if (fullName.includes('Factory New')) exterior = 'Factory New';
        else if (fullName.includes('Minimal Wear')) exterior = 'Minimal Wear';
        else if (fullName.includes('Field-Tested')) exterior = 'Field-Tested';
        else if (fullName.includes('Well-Worn')) exterior = 'Well-Worn';
        else if (fullName.includes('Battle-Scarred')) exterior = 'Battle-Scarred';

        return {
          id: item.id,
          name: fullName,
          price: item.pricing?.computed || item.pricing?.default || 0,
          float: item.asset?.float || null,
          image: item.asset?.images?.steam || item.asset?.images?.screenshot || '',
          type: csmoneyService.getWeaponType(fullName),
          rarity: item.asset?.rarity || '',
          exterior: exterior,
          pattern: item.asset?.pattern || null,
          stickers: item.stickers || [],
          keychains: item.keychains || [],
          isStatTrak: item.asset?.isStatTrak || false,
          isSouvenir: item.asset?.isSouvenir || false,
          is_tradable: !item.isMySellOrder,
          in_stock: true,
          assetId: item.asset?.id || null,
          source: 'api'
        };
      } else {
        // –î–∞–Ω–Ω—ã–µ –æ—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        return {
          id: item.id,
          name: item.name,
          price: item.price,
          image: item.image,
          type: csmoneyService.getWeaponType(item.name),
          rarity: 'unknown',
          is_tradable: true,
          in_stock: true,
          source: 'page_parsing'
        };
      }
    });

    // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ ID
    const uniqueItems = formattedItems.filter((item, index, self) =>
      index === self.findIndex(t => t.id === item.id)
    );

    console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${uniqueItems.length} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤:');
    uniqueItems.slice(0, 5).forEach((item, index) => {
      console.log(`  ${index + 1}. ${item.name} - $${item.price} (${item.source})`);
      if (item.float) console.log(`     Float: ${item.float}`);
    });

    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüíæ –ò–º–ø–æ—Ä—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...');

    let importedCount = 0;
    for (const item of uniqueItems) {
      try {
        console.log(`üîÑ –ò–º–ø–æ—Ä—Ç–∏—Ä—É—é: ${item.name} (ID: ${item.id})`);
        await csmoneyService.importItemsToDb([item]);
        importedCount++;

        if (importedCount % 10 === 0) {
          console.log(`üì¶ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${importedCount}/${uniqueItems.length}`);
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ ${item.name}: ${error.message}`);
        console.error(`üìã –î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç–∞:`, JSON.stringify(item, null, 2));
      }
    }

    // –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const totalItemsInDb = await db.Item.count();
    console.log(`\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–ú–ü–û–†–¢–ê:`);
    console.log(`‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${importedCount}`);
    console.log(`üì¶ –í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –±–∞–∑–µ: ${totalItemsInDb}`);
    console.log(`üåê –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: ${uniqueItems.some(i => i.source === 'api') ? 'API + –ü–∞—Ä—Å–∏–Ω–≥' : '–¢–æ–ª—å–∫–æ –ø–∞—Ä—Å–∏–Ω–≥'}`);

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    console.error('Stack trace:', error.stack);

    if (error.message.includes('net::ERR_INTERNET_DISCONNECTED')) {
      console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
    } else if (error.message.includes('Navigation timeout')) {
      console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –°–∞–π—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –º–µ–¥–ª–µ–Ω–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑');
    } else if (error.message.includes('puppeteer')) {
      console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Puppeteer: npm install puppeteer');
    }
  } finally {
    if (csmoneyService) {
      await csmoneyService.close();
      console.log('üîê –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç
if (require.main === module) {
  importWithBrowser();
}

module.exports = { importWithBrowser };
