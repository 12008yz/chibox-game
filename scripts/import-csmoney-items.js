const CSMoneyService = require('../services/csmoneyService');
const db = require('../models');

// –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ (–≤–∫–ª—é—á–∞–µ–º –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–π –∫–æ–¥)
async function getItemsWithPuppeteer(csmoneyService, offset = 0, limit = 60) {
  try {
    if (!csmoneyService.isLoggedIn) {
      await csmoneyService.initialize();
      if (!csmoneyService.isLoggedIn) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞ CS.Money');
      }
    }

    console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–∞—Ä–∫–µ—Ç–∞ CS.Money...');

    await csmoneyService.page.goto('https://cs.money/ru/market/sell-orders?limit=60&offset=0&deliverySpeed=instant', {
      waitUntil: 'networkidle2',
      timeout: 60000
    });

    console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');
    await csmoneyService.page.waitForSelector('.market-items__item, .item-card', { timeout: 30000 });

    let previousItemCount = 0;
    let currentItemCount = 0;
    let noNewItemsCount = 0;
    const maxScrollAttempts = 50; // –£–º–µ–Ω—å—à–∏–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const scrollDelay = 3000;
    const maxNoNewItems = 3;

    console.log('üìú –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');

    for (let scrollAttempt = 0; scrollAttempt < maxScrollAttempts; scrollAttempt++) {
      // –°—á–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
      currentItemCount = await csmoneyService.page.evaluate(() => {
        return document.querySelectorAll('.market-items__item, .item-card').length;
      });

      console.log(`  üìä –ü–æ–ø—ã—Ç–∫–∞ ${scrollAttempt + 1}/${maxScrollAttempts}: –Ω–∞–π–¥–µ–Ω–æ ${currentItemCount} –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);

      // –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
      if (currentItemCount === previousItemCount) {
        noNewItemsCount++;
        console.log(`    ‚è∏Ô∏è  –ù–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å (${noNewItemsCount}/${maxNoNewItems})`);

        if (noNewItemsCount >= maxNoNewItems) {
          console.log('    ‚úÖ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É.');
          break;
        }
      } else {
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        noNewItemsCount = 0;
        console.log(`    üÜï –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${currentItemCount - previousItemCount} –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);
      }

      previousItemCount = currentItemCount;

      // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–Ω–∏–∑ –ø–ª–∞–≤–Ω–æ
      await csmoneyService.page.evaluate(() => {
        window.scrollTo(0, document.body.scrollHeight);
      });

      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
      await new Promise(resolve => setTimeout(resolve, scrollDelay));

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∂–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      try {
        await csmoneyService.page.waitForFunction(
          (prevCount) => document.querySelectorAll('.market-items__item, .item-card').length > prevCount,
          { timeout: 5000 },
          currentItemCount
        );
        console.log('    ‚ú® –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ—Å–ª–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏');
      } catch (waitError) {
        console.log('    ‚è≥ –ù–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–µ –ø–æ—è–≤–∏–ª–∏—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥');
      }

      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      if (currentItemCount >= limit) {
        console.log(`    üéØ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç ${limit} –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É.`);
        break;
      }
    }

    console.log(`üìã –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞. –ò—Ç–æ–≥–æ –Ω–∞–π–¥–µ–Ω–æ: ${currentItemCount} –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);

    // –ü–∞—Ä—Å–∏–º –ø—Ä–µ–¥–º–µ—Ç—ã —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    console.log('üîç –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');
    const itemsFromPage = await csmoneyService.page.evaluate(() => {
      const items = [];

      // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
      const itemSelectors = [
        '.market-items__item',
        '.item-card',
        '[data-testid="market-item"]',
        '.cs-market-item',
        '.market-item',
        '.item'
      ];

      let itemElements = [];

      // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
      for (const selector of itemSelectors) {
        const elements = document.querySelectorAll(selector);
        if (elements.length > 0) {
          itemElements = elements;
          console.log(`–ù–∞–π–¥–µ–Ω–æ ${elements.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º: ${selector}`);
          break;
        }
      }

      if (itemElements.length === 0) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∏ —Å –æ–¥–Ω–∏–º —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º');
        return [];
      }

      itemElements.forEach((itemEl, index) => {
        try {
          // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è
          const nameSelectors = [
            '.item-card__name',
            '.market-items__item-name',
            '.item-name',
            '.name',
            '[data-testid="item-name"]',
            '.cs-item-name'
          ];

          // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –¥–ª—è —Ü–µ–Ω—ã
          const priceSelectors = [
            '.item-card__price',
            '.market-items__item-price',
            '.item-price',
            '.price',
            '[data-testid="item-price"]',
            '.cs-item-price'
          ];

          let nameEl = null;
          let priceEl = null;

          // –ò—â–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
          for (const selector of nameSelectors) {
            nameEl = itemEl.querySelector(selector);
            if (nameEl) break;
          }

          // –ò—â–µ–º —Ü–µ–Ω—É
          for (const selector of priceSelectors) {
            priceEl = itemEl.querySelector(selector);
            if (priceEl) break;
          }

          // –ü–æ–ª—É—á–∞–µ–º ID –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤
          const id = itemEl.getAttribute('data-id') ||
                    itemEl.getAttribute('data-item-id') ||
                    itemEl.getAttribute('data-testid') ||
                    itemEl.getAttribute('id') ||
                    `parsed_${Date.now()}_${index}`;

          // –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
          const image = itemEl.querySelector('img')?.src ||
                       itemEl.querySelector('img')?.getAttribute('data-src') ||
                       '';

          // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞–∑–≤–∞–Ω–∏—è
          const itemName = nameEl?.textContent?.trim() ||
                          nameEl?.innerText?.trim() ||
                          itemEl.getAttribute('title') ||
                          `Item ${index + 1}`;

          // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏ –ø–∞—Ä—Å–∏–º —Ü–µ–Ω—É
          let itemPrice = 0;
          if (priceEl) {
            const priceText = priceEl.textContent || priceEl.innerText || '';
            const priceMatch = priceText.match(/[\d.,]+/);
            if (priceMatch) {
              itemPrice = parseFloat(priceMatch[0].replace(',', '.')) || 0;
            }
          }

          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
          const rarityEl = itemEl.querySelector('.rarity, .item-rarity, [data-rarity]');
          const typeEl = itemEl.querySelector('.type, .item-type, [data-type]');

          items.push({
            id: id,
            name: itemName,
            price: itemPrice,
            image: image,
            rarity: rarityEl?.textContent?.trim() || rarityEl?.getAttribute('data-rarity') || '',
            type: typeEl?.textContent?.trim() || typeEl?.getAttribute('data-type') || '',
            in_stock: true,
            is_tradable: true
          });

        } catch (err) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —ç–ª–µ–º–µ–Ω—Ç–∞:', err);
        }
      });

      return items;
    });

    if (itemsFromPage.length > 0) {
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${itemsFromPage.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã`);
      return {
        success: true,
        items: itemsFromPage,
        total: itemsFromPage.length
      };
    }

    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
    return {
      success: false,
      message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã —Å CS.Money',
      items: []
    };

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ Puppeteer: ${error.message}`);
    return {
      success: false,
      message: error.message,
      items: []
    };
  }
}

async function importWithPuppeteer() {
  let csmoneyService = null;

  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ Puppeteer...');

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    const config = CSMoneyService.loadConfig();
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    console.log(`üë§ Steam ID: ${config.steamId || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);

    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
    csmoneyService = new CSMoneyService(config);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±—Ä–∞—É–∑–µ—Ä –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞...');
    await csmoneyService.initialize();

    if (!csmoneyService.isLoggedIn) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞ CS.Money');
      console.log('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å cookies:');
      console.log('   node scripts/update-csmoney-cookies.js');
      return;
    }

    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –Ω–∞ CS.Money');

    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º API
    console.log('\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API...');
    let result = await csmoneyService.getItems(0, 60);

    // –ï—Å–ª–∏ API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±—Ä–∞—É–∑–µ—Ä–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥
    if (!result.success) {
      console.log(`‚ö†Ô∏è  API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${result.message}`);
      console.log('üåê –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –±—Ä–∞—É–∑–µ—Ä–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥...');

      result = await getItemsWithPuppeteer(csmoneyService, 0, 100);
    }

    if (!result.success) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${result.message}`);
      return;
    }

    const items = result.items || [];
    console.log(`\n‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${items.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);

    if (items.length === 0) {
      console.log('‚ö†Ô∏è  –ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞');
      return;
    }

    // –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 5 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤:');
    items.slice(0, 5).forEach((item, index) => {
      console.log(`  ${index + 1}. ${item.name} - ${item.price} —Ä—É–±.`);
    });

    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüíæ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...');
    await csmoneyService.importItemsToDb(items);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const totalItems = await db.Item.count();
    console.log(`\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–ú–ü–û–†–¢–ê:`);
    console.log(`‚úÖ –í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –±–∞–∑–µ: ${totalItems}`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    const recentItems = await db.Item.findAll({
      order: [['createdAt', 'DESC']],
      limit: 5,
      attributes: ['name', 'price', 'rarity']
    });

    console.log('\nüÜï –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã:');
    recentItems.forEach((item, index) => {
      console.log(`  ${index + 1}. ${item.name} - ${item.price} —Ä—É–±. (${item.rarity})`);
    });

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
    if (error.message.includes('connect ECONNREFUSED')) {
      console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –ó–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
    } else if (error.message.includes('403') || error.message.includes('Forbidden')) {
      console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –û–±–Ω–æ–≤–∏—Ç–µ cookies CS.Money');
      console.log('   node scripts/update-csmoney-cookies.js');
    } else if (error.message.includes('puppeteer')) {
      console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Puppeteer');
      console.log('   npm install puppeteer');
    }
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    if (csmoneyService) {
      await csmoneyService.close();
      console.log('üîê –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç
importWithPuppeteer();
