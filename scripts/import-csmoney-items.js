const CSMoneyService = require('../services/csmoneyService');
const db = require('../models');

async function importWithBrowser() {
  let csmoneyService = null;

  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä...');

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    const config = CSMoneyService.loadConfig();
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    console.log(`üë§ Steam ID: ${config.steamId || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
    console.log(`üåê User-Agent: ${config.userAgent ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é'}`);

    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
    csmoneyService = new CSMoneyService(config);

    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞...');
    await csmoneyService.initialize();

    if (!csmoneyService.isLoggedIn) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞ CS.Money');
      console.log('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å cookies');
      return;
    }

    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –Ω–∞ CS.Money');
    console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–∞—Ä–∫–µ—Ç–∞...');

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–∞—Ä–∫–µ—Ç–∞
    await csmoneyService.page.goto('https://cs.money/ru/market/sell-orders/', {
      waitUntil: 'networkidle2',
      timeout: 60000
    });

    console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');
    await new Promise(resolve => setTimeout(resolve, 5000));

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ—Ö–≤–∞—Ç —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è JSON –¥–∞–Ω–Ω—ã—Ö
    const interceptedData = [];

    csmoneyService.page.on('response', async (response) => {
      const url = response.url();
      if (url.includes('/2.0/market/sell-orders') && url.includes('deliverySpeed=instant')) {
        try {
          const jsonData = await response.json();
          if (jsonData && jsonData.items && Array.isArray(jsonData.items)) {
            console.log(`üì¶ –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω –æ—Ç–≤–µ—Ç API: ${jsonData.items.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);
            interceptedData.push(...jsonData.items);
          }
        } catch (error) {
          console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –æ—Ç–≤–µ—Ç');
        }
      }
    });

    let totalImported = 0;
    let scrollAttempts = 0;
    const maxScrollAttempts = 20;
    const targetItems = 300; // –¶–µ–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤

    console.log('üìú –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');

    while (scrollAttempts < maxScrollAttempts && interceptedData.length < targetItems) {
      scrollAttempts++;

      console.log(`üìä –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ ${scrollAttempts}/${maxScrollAttempts}`);
      console.log(`üì¶ –°–æ–±—Ä–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${interceptedData.length}`);

      // –°—á–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      const currentItemCount = await csmoneyService.page.evaluate(() => {
        return document.querySelectorAll('[data-testid="market-item"], .market-item, .item-card').length;
      });

      console.log(`üéØ –ü—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${currentItemCount}`);

      // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
      await csmoneyService.page.evaluate(() => {
        window.scrollTo({
          top: document.body.scrollHeight,
          behavior: 'smooth'
        });
      });

      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
      await new Promise(resolve => setTimeout(resolve, 3000 + Math.random() * 2000));

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
      await csmoneyService.page.evaluate(() => {
        window.scrollBy(0, 500);
      });

      await new Promise(resolve => setTimeout(resolve, 2000));

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –ª–∏ –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      const newItemCount = await csmoneyService.page.evaluate(() => {
        return document.querySelectorAll('[data-testid="market-item"], .market-item, .item-card').length;
      });

      if (newItemCount === currentItemCount && scrollAttempts > 3) {
        console.log('‚è∏Ô∏è –ù–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑...');
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–≤–µ—Ä—Ö –∏ —Å–Ω–æ–≤–∞ –≤–Ω–∏–∑ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        await csmoneyService.page.evaluate(() => {
          window.scrollTo(0, document.body.scrollHeight * 0.8);
        });
        await new Promise(resolve => setTimeout(resolve, 1000));
        await csmoneyService.page.evaluate(() => {
          window.scrollTo(0, document.body.scrollHeight);
        });
        await new Promise(resolve => setTimeout(resolve, 3000));
      }
    }

    console.log(`\nüìã –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞. –°–æ–±—Ä–∞–Ω–æ ${interceptedData.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–∑ API`);

    if (interceptedData.length === 0) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ API, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');

      // Fallback: –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      const pageItems = await csmoneyService.page.evaluate(() => {
        const items = [];
        const itemElements = document.querySelectorAll('[data-testid="market-item"], .market-item, .item-card');

        itemElements.forEach((element, index) => {
          try {
            const nameEl = element.querySelector('[data-testid="item-name"], .item-name, .name');
            const priceEl = element.querySelector('[data-testid="item-price"], .item-price, .price');
            const imageEl = element.querySelector('img');

            const name = nameEl?.textContent?.trim() || `Item ${index + 1}`;
            const priceText = priceEl?.textContent?.trim() || '0';
            const priceMatch = priceText.match(/[\d.,]+/);
            const price = priceMatch ? parseFloat(priceMatch[0].replace(',', '.')) : 0;
            const image = imageEl?.src || imageEl?.getAttribute('data-src') || '';

            items.push({
              id: `page_${Date.now()}_${index}`,
              name: name,
              price: price,
              image: image,
              source: 'page_parsing'
            });
          } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ ${index}:`, error);
          }
        });

        return items;
      });

      console.log(`üìÑ –ü–æ–ª—É—á–µ–Ω–æ ${pageItems.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã`);
      interceptedData.push(...pageItems);
    }

    if (interceptedData.length === 0) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∏ —á–µ—Ä–µ–∑ API, –Ω–∏ —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥');
      return;
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log('\nüîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    const formattedItems = interceptedData.map(item => {
      // –ï—Å–ª–∏ —ç—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ—Ç API
      if (item.asset) {
        const fullName = item.asset?.names?.full || '';
        let exterior = null;
        if (fullName.includes('Factory New')) exterior = 'Factory New';
        else if (fullName.includes('Minimal Wear')) exterior = 'Minimal Wear';
        else if (fullName.includes('Field-Tested')) exterior = 'Field-Tested';
        else if (fullName.includes('Well-Worn')) exterior = 'Well-Worn';
        else if (fullName.includes('Battle-Scarred')) exterior = 'Battle-Scarred';

        return {
          id: item.id,
          name: fullName,
          price: item.pricing?.computed || item.pricing?.default || 0,
          float: item.asset?.float || null,
          image: item.asset?.images?.steam || item.asset?.images?.screenshot || '',
          type: csmoneyService.getWeaponType(fullName),
          rarity: item.asset?.rarity || '',
          exterior: exterior,
          pattern: item.asset?.pattern || null,
          stickers: item.stickers || [],
          keychains: item.keychains || [],
          isStatTrak: item.asset?.isStatTrak || false,
          isSouvenir: item.asset?.isSouvenir || false,
          is_tradable: !item.isMySellOrder,
          in_stock: true,
          assetId: item.asset?.id || null,
          source: 'api'
        };
      } else {
        // –î–∞–Ω–Ω—ã–µ –æ—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        return {
          id: item.id,
          name: item.name,
          price: item.price,
          image: item.image,
          type: csmoneyService.getWeaponType(item.name),
          rarity: 'unknown',
          is_tradable: true,
          in_stock: true,
          source: 'page_parsing'
        };
      }
    });

    // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ ID
    const uniqueItems = formattedItems.filter((item, index, self) =>
      index === self.findIndex(t => t.id === item.id)
    );

    console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${uniqueItems.length} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤:');
    uniqueItems.slice(0, 5).forEach((item, index) => {
      console.log(`  ${index + 1}. ${item.name} - $${item.price} (${item.source})`);
      if (item.float) console.log(`     Float: ${item.float}`);
    });

    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüíæ –ò–º–ø–æ—Ä—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...');

    let importedCount = 0;
    for (const item of uniqueItems) {
      try {
        await csmoneyService.importItemsToDb([item]);
        importedCount++;

        if (importedCount % 10 === 0) {
          console.log(`üì¶ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${importedCount}/${uniqueItems.length}`);
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ ${item.name}: ${error.message}`);
      }
    }

    // –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const totalItemsInDb = await db.Item.count();
    console.log(`\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–ú–ü–û–†–¢–ê:`);
    console.log(`‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${importedCount}`);
    console.log(`üì¶ –í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –±–∞–∑–µ: ${totalItemsInDb}`);
    console.log(`üåê –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: ${uniqueItems.some(i => i.source === 'api') ? 'API + –ü–∞—Ä—Å–∏–Ω–≥' : '–¢–æ–ª—å–∫–æ –ø–∞—Ä—Å–∏–Ω–≥'}`);

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    console.error('Stack trace:', error.stack);

    if (error.message.includes('net::ERR_INTERNET_DISCONNECTED')) {
      console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
    } else if (error.message.includes('Navigation timeout')) {
      console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –°–∞–π—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –º–µ–¥–ª–µ–Ω–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑');
    } else if (error.message.includes('puppeteer')) {
      console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Puppeteer: npm install puppeteer');
    }
  } finally {
    if (csmoneyService) {
      await csmoneyService.close();
      console.log('üîê –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç
if (require.main === module) {
  importWithBrowser();
}

module.exports = { importWithBrowser };
