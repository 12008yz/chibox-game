// –ê–Ω–∞–ª–∏–∑ —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–µ–π—Å–æ–≤ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è 20% –ø—Ä–∏–±—ã–ª–∏
const COMPLETE_ITEMS_URLS = require('../utils/linkItems-complete');

// –¶–µ–Ω—ã –ø–æ–¥–ø–∏—Å–æ–∫ (–∏–∑ buySubscription.js)
const SUBSCRIPTION_PRICES = {
  1: { name: '–°—Ç–∞—Ç—É—Å', price: 1210, days: 30, daily_cost: 40.33 },
  2: { name: '–°—Ç–∞—Ç—É—Å+', price: 2890, days: 30, daily_cost: 96.33 },
  3: { name: '–°—Ç–∞—Ç—É—Å++', price: 6819, days: 30, daily_cost: 227.30 }
};

// –¶–µ–Ω—ã –ø–ª–∞—Ç–Ω—ã—Ö –∫–µ–π—Å–æ–≤ (–∏–∑ add-base-items.js)
const PAID_CASES = {
  purchase: { name: '–ü–æ–∫—É–ø–Ω–æ–π –∫–µ–π—Å', price: 99 },
  premium: { name: '–ü—Ä–µ–º–∏—É–º –∫–µ–π—Å', price: 499 }
};

// –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Å—Ä–µ–¥–Ω–∏–µ —Ü–µ–Ω—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏ (–≤ —Ä—É–±–ª—è—Ö)
const ESTIMATED_ITEM_PRICES = {
  consumer: 8,      // ‚ÇΩ3-15 (Battle-Scarred —Å–∫–∏–Ω—ã)
  industrial: 28,   // ‚ÇΩ15-50 (Industrial Grade)
  milspec: 95,      // ‚ÇΩ50-200 (Mil-Spec Grade)
  restricted: 320,  // ‚ÇΩ200-600 (Restricted)
  classified: 950,  // ‚ÇΩ500-1800 (Classified)
  covert: 2800,     // ‚ÇΩ1500-5000 (Covert)
  contraband: 9500, // ‚ÇΩ5000-20000 (–ù–æ–∂–∏)
  exotic: 22000     // ‚ÇΩ15000+ (–ü–µ—Ä—á–∞—Ç–∫–∏)
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
function analyzeItemDistribution() {
  console.log('üìä –ê–ù–ê–õ–ò–ó –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –ü–†–ï–î–ú–ï–¢–û–í –í LINKITEMS-COMPLETE.JS:\n');

  const distribution = {};
  let totalItems = 0;

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
  Object.entries(COMPLETE_ITEMS_URLS).forEach(([caseType, categories]) => {
    console.log(`üéØ –¢–∏–ø –∫–µ–π—Å–∞: ${caseType.toUpperCase()}`);

    distribution[caseType] = {};
    let caseTotal = 0;

    Object.entries(categories).forEach(([rarity, items]) => {
      const count = Array.isArray(items) ? items.length : 0;
      distribution[caseType][rarity] = count;
      caseTotal += count;
      totalItems += count;

      console.log(`   ${rarity}: ${count} –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);
    });

    console.log(`   –í–°–ï–ì–û –≤ ${caseType}: ${caseTotal} –ø—Ä–µ–¥–º–µ—Ç–æ–≤\n`);
  });

  console.log(`üìã –û–ë–©–ò–ô –ò–¢–û–ì: ${totalItems} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤–æ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö\n`);

  return distribution;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –æ–∂–∏–¥–∞–µ–º–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–¥–∞–Ω–Ω—ã—Ö –≤–µ—Å–∞—Ö
function calculateExpectedValue(weights, priceMap = ESTIMATED_ITEM_PRICES) {
  let expectedValue = 0;
  let totalWeight = 0;

  // –°—É–º–º–∏—Ä—É–µ–º –≤–µ—Å–∞
  Object.values(weights).forEach(weight => {
    totalWeight += weight;
  });

  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤–∫–ª–∞–¥ –∫–∞–∂–¥–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏
  Object.entries(weights).forEach(([rarity, weight]) => {
    const probability = weight / totalWeight;
    const averagePrice = priceMap[rarity] || 0;
    const contribution = probability * averagePrice;
    expectedValue += contribution;
  });

  return expectedValue;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤–µ—Å–æ–≤ –ø–æ–¥ 20% —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
function optimizeWeightsFor20Percent() {
  console.log('üéØ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –í–ï–°–û–í –î–õ–Ø 20% –†–ï–ù–¢–ê–ë–ï–õ–¨–ù–û–°–¢–ò:\n');

  // –¶–µ–ª–µ–≤—ã–µ –æ–∂–∏–¥–∞–µ–º—ã–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ (80% –æ—Ç –¥–æ—Ö–æ–¥–∞)
  const targets = {
    subscription_tier1: SUBSCRIPTION_PRICES[1].daily_cost * 0.8, // ‚ÇΩ32.26
    subscription_tier2: SUBSCRIPTION_PRICES[2].daily_cost * 0.8, // ‚ÇΩ77.06
    subscription_tier3: SUBSCRIPTION_PRICES[3].daily_cost * 0.8, // ‚ÇΩ181.84
    purchase: PAID_CASES.purchase.price * 0.8, // ‚ÇΩ79.20
    premium: PAID_CASES.premium.price * 0.8     // ‚ÇΩ399.20
  };

  console.log('üìã –¶–ï–õ–ï–í–´–ï –û–ñ–ò–î–ê–ï–ú–´–ï –°–¢–û–ò–ú–û–°–¢–ò:');
  Object.entries(targets).forEach(([caseType, target]) => {
    console.log(`   ${caseType}: ‚ÇΩ${target.toFixed(2)}`);
  });
  console.log('');

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–µ—Å–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –∫–µ–π—Å–∞
  const optimizedWeights = {
    subscription_tier1: {
      // –¶–µ–ª—å: ‚ÇΩ32.26
      consumer: 900,    // 90% - –¥–µ—à–µ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      industrial: 85,   // 8.5% - —Å—Ä–µ–¥–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      milspec: 13,      // 1.3% - —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      restricted: 2     // 0.2% - —Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    },

    subscription_tier2: {
      // –¶–µ–ª—å: ‚ÇΩ77.06
      consumer: 750,    // 75% - –¥–µ—à–µ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      industrial: 180,  // 18% - —Å—Ä–µ–¥–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      milspec: 60,      // 6% - —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      restricted: 9,    // 0.9% - —Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      classified: 1     // 0.1% - –æ—á–µ–Ω—å —Ä–µ–¥–∫–∏–µ
    },

    subscription_tier3: {
      // –¶–µ–ª—å: ‚ÇΩ181.84
      consumer: 550,    // 55% - –¥–µ—à–µ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      industrial: 250,  // 25% - —Å—Ä–µ–¥–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      milspec: 140,     // 14% - —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      restricted: 50,   // 5% - —Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      classified: 9,    // 0.9% - –æ—á–µ–Ω—å —Ä–µ–¥–∫–∏–µ
      covert: 1         // 0.1% - –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ
    },

    purchase: {
      // –¶–µ–ª—å: ‚ÇΩ79.20
      consumer: 720,    // 72% - –¥–µ—à–µ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      industrial: 200,  // 20% - —Å—Ä–µ–¥–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      milspec: 65,      // 6.5% - —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      restricted: 13,   // 1.3% - —Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      classified: 2     // 0.2% - –æ—á–µ–Ω—å —Ä–µ–¥–∫–∏–µ
    },

    premium: {
      // –¶–µ–ª—å: ‚ÇΩ399.20
      milspec: 400,     // 40% - —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      restricted: 350,  // 35% - —Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
      classified: 180,  // 18% - –æ—á–µ–Ω—å —Ä–µ–¥–∫–∏–µ
      covert: 55,       // 5.5% - –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ
      contraband: 14,   // 1.4% - –Ω–æ–∂–∏
      exotic: 1         // 0.1% - –ø–µ—Ä—á–∞—Ç–∫–∏
    }
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–µ—Å–∞
  console.log('‚úÖ –ü–†–û–í–ï–†–ö–ê –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–• –í–ï–°–û–í:\n');

  Object.entries(optimizedWeights).forEach(([caseType, weights]) => {
    const expectedValue = calculateExpectedValue(weights);
    const target = targets[caseType];
    const difference = expectedValue - target;
    const accuracy = Math.abs(difference / target * 100);

    console.log(`üì¶ ${caseType.toUpperCase()}:`);
    console.log(`   –û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ‚ÇΩ${expectedValue.toFixed(2)}`);
    console.log(`   –¶–µ–ª–µ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ‚ÇΩ${target.toFixed(2)}`);
    console.log(`   –†–∞–∑–Ω–∏—Ü–∞: ${difference >= 0 ? '+' : ''}‚ÇΩ${difference.toFixed(2)}`);
    console.log(`   –¢–æ—á–Ω–æ—Å—Ç—å: ${accuracy.toFixed(1)}% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ`);
    console.log(`   –°—Ç–∞—Ç—É—Å: ${accuracy <= 5 ? '‚úÖ –û–¢–õ–ò–ß–ù–û' : accuracy <= 10 ? '‚ö†Ô∏è –ü–†–ò–ï–ú–õ–ï–ú–û' : '‚ùå –¢–†–ï–ë–£–ï–¢ –ö–û–†–†–ï–ö–¢–ò–†–û–í–ö–ò'}`);
    console.log('');
  });

  return optimizedWeights;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
function analyzeItemNeeds() {
  console.log('üîç –ê–ù–ê–õ–ò–ó –ù–ï–û–ë–•–û–î–ò–ú–û–°–¢–ò –î–û–ë–ê–í–õ–ï–ù–ò–Ø –ü–†–ï–î–ú–ï–¢–û–í:\n');

  const distribution = analyzeItemDistribution();

  // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏
  const minimumRequired = {
    consumer: 50,     // –û—Å–Ω–æ–≤–∞ –≤—ã–ø–∞–¥–µ–Ω–∏–π - –Ω—É–∂–Ω–æ –º–Ω–æ–≥–æ
    industrial: 30,   // –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã - –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ
    milspec: 20,      // –•–æ—Ä–æ—à–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã - —É–º–µ—Ä–µ–Ω–Ω–æ
    restricted: 15,   // –†–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã - –º–∞–ª–æ
    classified: 10,   // –û—á–µ–Ω—å —Ä–µ–¥–∫–∏–µ - –º–∏–Ω–∏–º—É–º
    covert: 8,        // –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ - –æ—á–µ–Ω—å –º–∞–ª–æ
    contraband: 5,    // –ù–æ–∂–∏ - —Ä–µ–¥–∫–æ
    exotic: 3         // –ü–µ—Ä—á–∞—Ç–∫–∏ - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ä–µ–¥–∫–æ—Å—Ç—å
  };

  console.log('üìã –ê–ù–ê–õ–ò–ó –ü–û–¢–†–ï–ë–ù–û–°–¢–ò –í –ü–†–ï–î–ú–ï–¢–ê–•:\n');

  Object.entries(distribution).forEach(([caseType, rarities]) => {
    console.log(`üéØ ${caseType.toUpperCase()}:`);

    let needsAddition = false;

    Object.entries(minimumRequired).forEach(([rarity, required]) => {
      const current = rarities[rarity] || 0;
      const shortage = Math.max(0, required - current);

      if (shortage > 0) {
        needsAddition = true;
        console.log(`   ‚ùå ${rarity}: ${current}/${required} (–Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å ${shortage})`);
      } else {
        console.log(`   ‚úÖ ${rarity}: ${current}/${required} (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ)`);
      }
    });

    if (!needsAddition) {
      console.log(`   üéâ –ü—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –≤—Å–µ—Ö —Ä–µ–¥–∫–æ—Å—Ç–µ–π!`);
    }

    console.log('');
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
function generateFinalReport() {
  console.log('üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\n');

  console.log('üéØ –¶–ï–õ–ò:');
  console.log('‚Ä¢ –†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å 20% –¥–ª—è –≤—Å–µ—Ö –∫–µ–π—Å–æ–≤');
  console.log('‚Ä¢ 80% –¥–æ—Ö–æ–¥–æ–≤ —Ä–∞–∑–¥–∞–µ—Ç—Å—è –∏–≥—Ä–æ–∫–∞–º –≤ –≤–∏–¥–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤');
  console.log('‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n');

  console.log('üìä –ù–ê–ô–î–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:');
  console.log('‚Ä¢ –¢–µ–∫—É—â–∏–µ –≤–µ—Å–∞ –¥—Ä–æ–ø–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç 20% —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏');
  console.log('‚Ä¢ –ü–æ–¥–ø–∏—Å–æ—á–Ω—ã–µ –∫–µ–π—Å—ã –¥–∞—é—Ç —Å–ª–∏—à–∫–æ–º –¥–æ—Ä–æ–≥–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã');
  console.log('‚Ä¢ –ü–ª–∞—Ç–Ω—ã–µ –∫–µ–π—Å—ã –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º–∏\n');

  console.log('‚úÖ –†–ï–ö–û–ú–ï–ù–î–û–í–ê–ù–ù–´–ï –†–ï–®–ï–ù–ò–Ø:');
  console.log('1. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–µ—Å–∞ –¥—Ä–æ–ø–∞ –∏–∑ —Ä–∞—Å—á–µ—Ç–æ–≤ –≤—ã—à–µ');
  console.log('2. –£–≤–µ–ª–∏—á–∏—Ç—å –¥–æ–ª—é –¥–µ—à–µ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (consumer/industrial)');
  console.log('3. –°–Ω–∏–∑–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–æ—Ä–æ–≥–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –ø–æ–¥–ø–∏—Å–æ—á–Ω—ã—Ö –∫–µ–π—Å–∞—Ö');
  console.log('4. –î–ª—è –ø—Ä–µ–º–∏—É–º –∫–µ–π—Å–æ–≤ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã\n');

  console.log('üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
  console.log('1. –û–±–Ω–æ–≤–∏—Ç—å CASE_CONFIGS –≤ add-base-items.js');
  console.log('2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ –≤–µ—Å–∞ –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä–∫–µ');
  console.log('3. –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å');
  console.log('4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ç–æ–Ω–∫–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–µ—Å–∞\n');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üöÄ –ê–ù–ê–õ–ò–ó –†–ï–ù–¢–ê–ë–ï–õ–¨–ù–û–°–¢–ò –ö–ï–ô–°–û–í –î–õ–Ø 20% –ü–†–ò–ë–´–õ–ò\n');
  console.log('='  .repeat(60) + '\n');

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
  analyzeItemDistribution();

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –≤–µ—Å–∞ –¥–ª—è 20% —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
  const optimizedWeights = optimizeWeightsFor20Percent();

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö
  analyzeItemNeeds();

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  generateFinalReport();

  console.log('='  .repeat(60));
  console.log('‚úÖ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù');

  return optimizedWeights;
}

// –≠–∫—Å–ø–æ—Ä—Ç
module.exports = {
  SUBSCRIPTION_PRICES,
  PAID_CASES,
  ESTIMATED_ITEM_PRICES,
  analyzeItemDistribution,
  calculateExpectedValue,
  optimizeWeightsFor20Percent,
  analyzeItemNeeds,
  main
};

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main();
}
