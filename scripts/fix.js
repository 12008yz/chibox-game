const db = require('../models');

async function fixSubscriptionOrigin() {
  console.log('üîß –û–±–Ω–æ–≤–ª—è–µ–º origin –¥–ª—è –ø–æ–¥–ø–∏—Å–æ—á–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤...\n');

  try {
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Å origin subscription_tier*_case –Ω–∞ subscription_case
    const [updatedCount] = await db.Item.update(
      { origin: 'subscription_case' },
      {
        where: {
          origin: {
            [db.Sequelize.Op.in]: [
              'subscription_tier1_case',
              'subscription_tier2_case',
              'subscription_tier3_case'
            ]
          }
        }
      }
    );

    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–æ—á–Ω—ã—Ö –∫–µ–π—Å–æ–≤`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const subscriptionItems = await db.Item.findAll({
      where: { origin: 'subscription_case' },
      attributes: ['rarity'],
      raw: true
    });

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
    const rarityCount = {};
    subscriptionItems.forEach(item => {
      rarityCount[item.rarity] = (rarityCount[item.rarity] || 0) + 1;
    });

    console.log('\nüìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:');
    Object.entries(rarityCount).forEach(([rarity, count]) => {
      console.log(`   ${rarity}: ${count} –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);
    });

    console.log(`\nüéØ –í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–æ—á–Ω—ã—Ö –∫–µ–π—Å–æ–≤: ${subscriptionItems.length}`);

    console.log('\n‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤—Å–µ —Ç—Ä–∏ —É—Ä–æ–≤–Ω—è –ø–æ–¥–ø–∏—Å–∫–∏ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ origin:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  fixSubscriptionOrigin()
    .then(() => {
      console.log('\nüéâ Origin —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      process.exit(0);
    })
    .catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { fixSubscriptionOrigin };
