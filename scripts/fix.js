const db = require('../models');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–µ–π—Å–æ–≤
const caseConfigs = {
  // –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫–µ–π—Å—ã (–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ) - —Ç–æ–ª—å–∫–æ –¥–µ—à–µ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
  free: {
    maxItemPrice: 500, // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚ÇΩ500
    rarityWeights: {
      consumer: 50,     // 50% - —Å–∞–º—ã–µ –¥–µ—à–µ–≤—ã–µ
      industrial: 30,   // 30% - –¥–µ—à–µ–≤—ã–µ
      milspec: 15,      // 15% - —Å—Ä–µ–¥–Ω–∏–µ
      restricted: 4,    // 4% - –¥–æ—Ä–æ–≥–∏–µ
      classified: 1,    // 1% - –æ—á–µ–Ω—å –¥–æ—Ä–æ–≥–∏–µ
      covert: 0,        // 0% - –∑–∞–ø—Ä–µ—â–µ–Ω—ã
      contraband: 0,    // 0% - –∑–∞–ø—Ä–µ—â–µ–Ω—ã
      exotic: 0         // 0% - –∑–∞–ø—Ä–µ—â–µ–Ω—ã
    }
  },

  // –ü–æ–∫—É–ø–Ω–æ–π –∫–µ–π—Å (‚ÇΩ99) - —É–º–µ—Ä–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å
  purchase: {
    maxItemPrice: 2000, // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚ÇΩ2000
    rarityWeights: {
      consumer: 40,     // 40%
      industrial: 25,   // 25%
      milspec: 20,      // 20%
      restricted: 10,   // 10%
      classified: 4,    // 4%
      covert: 1,        // 1%
      contraband: 0,    // 0%
      exotic: 0         // 0%
    }
  },

  // –ü—Ä–µ–º–∏—É–º –∫–µ–π—Å (‚ÇΩ499) - —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
  premium: {
    maxItemPrice: 50000, // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚ÇΩ50000
    rarityWeights: {
      consumer: 20,     // 20%
      industrial: 20,   // 20%
      milspec: 25,      // 25%
      restricted: 20,   // 20%
      classified: 12,   // 12%
      covert: 2.5,      // 2.5%
      contraband: 0.4,  // 0.4%
      exotic: 0.1       // 0.1%
    }
  }
};

// –ú–∞–ø–ø–∏–Ω–≥ —Ç–∏–ø–æ–≤ –∫–µ–π—Å–æ–≤
const caseTypeMapping = {
  'subscription_case': 'free',     // –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫–µ–π—Å—ã
  'purchase_case': 'purchase',     // –ü–æ–∫—É–ø–Ω–æ–π –∫–µ–π—Å
  'premium_case': 'premium'        // –ü—Ä–µ–º–∏—É–º –∫–µ–π—Å
};

async function rebalanceCases() {
  console.log('üé∞ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫—É –∫–µ–π—Å–æ–≤ CS2');
  console.log('üí° –¶–µ–ª—å: —Ä–∞–∑–±–∞–≤–∏—Ç—å –∫–µ–π—Å—ã –¥–µ—à–µ–≤—ã–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –≤—ã–ø–ª–∞—Ç\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–µ–π—Å—ã
    const caseTemplates = await db.CaseTemplate.findAll({
      where: { is_active: true },
      include: [{ model: db.Item, as: 'items' }]
    });

    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–µ–π—Å–æ–≤: ${caseTemplates.length}\n`);

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    const allItems = await db.Item.findAll({
      where: { is_available: true }
    });

    console.log(`üéÅ –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${allItems.length}\n`);

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏ –∏ —Ü–µ–Ω–µ
    const itemsByRarity = {};
    allItems.forEach(item => {
      const rarity = item.rarity;
      const price = parseFloat(item.price || 0);

      if (!itemsByRarity[rarity]) {
        itemsByRarity[rarity] = [];
      }
      itemsByRarity[rarity].push({ ...item.get({ plain: true }), price });
    });

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∫–∞–∂–¥–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏ –ø–æ —Ü–µ–Ω–µ (–æ—Ç –¥–µ—à–µ–≤—ã—Ö –∫ –¥–æ—Ä–æ–≥–∏–º)
    Object.keys(itemsByRarity).forEach(rarity => {
      itemsByRarity[rarity].sort((a, b) => a.price - b.price);
    });

    console.log('üìä –ü—Ä–µ–¥–º–µ—Ç—ã –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏:');
    Object.entries(itemsByRarity).forEach(([rarity, items]) => {
      const avgPrice = items.reduce((sum, item) => sum + item.price, 0) / items.length;
      console.log(`   ${rarity}: ${items.length} —à—Ç, —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ ‚ÇΩ${avgPrice.toFixed(2)}`);
    });
    console.log();

    // –ü–µ—Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –∫–µ–π—Å
    for (const caseTemplate of caseTemplates) {
      await rebalanceCase(caseTemplate, itemsByRarity);
    }

    console.log('‚úÖ –ü–µ—Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: node scripts/fix.js');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–µ:', error);
    throw error;
  }
}

async function rebalanceCase(caseTemplate, itemsByRarity) {
  const origin = caseTemplate.items?.[0]?.origin || 'subscription_case';
  const caseType = caseTypeMapping[origin] || 'purchase';
  const config = caseConfigs[caseType];

  console.log(`\nüé≤ –ü–µ—Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –∫–µ–π—Å–∞: ${caseTemplate.name}`);
  console.log(`   üìù –¢–∏–ø: ${caseType} (${origin})`);
  console.log(`   üí∞ –¶–µ–Ω–∞: ${caseTemplate.price ? `‚ÇΩ${caseTemplate.price}` : '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π'}`);
  console.log(`   üìä –¢–µ–∫—É—â–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${caseTemplate.items.length}`);

  // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–µ–∫—É—â–∏–µ —Å–≤—è–∑–∏
  await db.CaseTemplateItem.destroy({
    where: { case_template_id: caseTemplate.id }
  });

  const newItems = [];
  let totalWeight = 0;

  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  Object.entries(config.rarityWeights).forEach(([rarity, weightPercent]) => {
    if (weightPercent === 0 || !itemsByRarity[rarity]) return;

    const availableItems = itemsByRarity[rarity].filter(item =>
      item.price <= config.maxItemPrice
    );

    if (availableItems.length === 0) return;

    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —ç—Ç–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏ (–ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –≤–µ—Å—É)
    const itemCount = Math.max(1, Math.round((weightPercent / 100) * 50)); // 50 - –±–∞–∑–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–µ–π—Å–µ

    for (let i = 0; i < itemCount; i++) {
      // –ë–µ—Ä–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö (—Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –∫ –¥–µ—à–µ–≤—ã–º)
      const index = Math.floor(Math.pow(Math.random(), 2) * availableItems.length); // –ö–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –¥–µ—à–µ–≤—ã—Ö
      const item = availableItems[index];

      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤–µ—Å –ø—Ä–µ–¥–º–µ—Ç–∞ (–¥–µ—à–µ–≤—ã–µ = –±–æ–ª—å—à–∏–π –≤–µ—Å)
      const maxPrice = Math.max(...availableItems.map(i => i.price));
      const priceRatio = maxPrice > 0 ? (maxPrice - item.price) / maxPrice : 1;
      const weight = 0.1 + (priceRatio * 2); // –û—Ç 0.1 –¥–æ 2.1

      newItems.push({
        item,
        weight: parseFloat(weight.toFixed(3))
      });
      totalWeight += weight;
    }
  });

  console.log(`   ‚ûï –ù–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${newItems.length}`);
  console.log(`   ‚öñÔ∏è  –û–±—â–∏–π –≤–µ—Å: ${totalWeight.toFixed(3)}`);

  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Å–≤—è–∑–∏
  const caseTemplateItems = newItems.map(({ item, weight }) => ({
    case_template_id: caseTemplate.id,
    item_id: item.id,
    created_at: new Date(),
    updated_at: new Date()
  }));

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Å–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
  const itemUpdates = newItems.map(({ item, weight }) =>
    db.Item.update(
      { drop_weight: weight },
      { where: { id: item.id } }
    )
  );

  await Promise.all([
    db.CaseTemplateItem.bulkCreate(caseTemplateItems),
    ...itemUpdates
  ]);

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
  const rarityStats = {};
  newItems.forEach(({ item }) => {
    const rarity = item.rarity;
    if (!rarityStats[rarity]) {
      rarityStats[rarity] = { count: 0, totalPrice: 0, avgWeight: 0 };
    }
    rarityStats[rarity].count++;
    rarityStats[rarity].totalPrice += item.price;
  });

  console.log('   üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏:');
  Object.entries(rarityStats).forEach(([rarity, stats]) => {
    const avgPrice = (stats.totalPrice / stats.count).toFixed(2);
    const percentage = ((stats.count / newItems.length) * 100).toFixed(1);
    console.log(`      ${rarity}: ${stats.count} —à—Ç (${percentage}%) - –°—Ä. ‚ÇΩ${avgPrice}`);
  });

  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–∂–∏–¥–∞–µ–º—É—é —Å—Ä–µ–¥–Ω—é—é –≤—ã–ø–ª–∞—Ç—É
  const expectedPayout = newItems.reduce((sum, { item, weight }) => {
    return sum + (item.price * (weight / totalWeight));
  }, 0);

  console.log(`   üíé –û–∂–∏–¥–∞–µ–º–∞—è —Å—Ä–µ–¥–Ω—è—è –≤—ã–ø–ª–∞—Ç–∞: ‚ÇΩ${expectedPayout.toFixed(2)}`);

  if (caseTemplate.price) {
    const profitMargin = ((caseTemplate.price - expectedPayout) / caseTemplate.price * 100);
    console.log(`   üìä –û–∂–∏–¥–∞–µ–º–∞—è –º–∞—Ä–∂–∞: ${profitMargin.toFixed(1)}%`);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
module.exports = {
  rebalanceCases,
  rebalanceCase,
  caseConfigs
};

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  const args = process.argv.slice(2);

  if (args[0] === '--confirm' || args[0] === '-y') {
    rebalanceCases()
      .then(() => {
        console.log('\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ: node scripts/fix.js');
        process.exit(0);
      })
      .catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        process.exit(1);
      });
  } else {
    console.log('üé∞ –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –∫–µ–π—Å–æ–≤ CS2');
    console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Å—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–µ—Ö –∫–µ–π—Å–æ–≤!');
    console.log('');
    console.log('–ß—Ç–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ:');
    console.log('‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –∫–µ–π—Å–æ–≤');
    console.log('‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Å–æ–≥–ª–∞—Å–Ω–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
    console.log('‚Ä¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤–µ—Å–∞ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –≤—ã–ø–ª–∞—Ç');
    console.log('‚Ä¢ –î–µ—à–µ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ–ª—É—á–∞—Ç –±–æ–ª—å—à–∏–π –≤–µ—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è');
    console.log('');
    console.log('–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:');
    console.log('node scripts/rebalance-cases.js --confirm');
  }
}
