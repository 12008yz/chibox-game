#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Steam –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Puppeteer
 */

const SteamPuppeteerService = require('../services/steamPuppeteerService');
const steamBotConfig = require('../config/steam_bot.js');
const winston = require('winston');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
const logger = winston.createLogger({
  level: 'info',
  format: winston.format.combine(
    winston.format.timestamp(),
    winston.format.colorize(),
    winston.format.simple()
  ),
  transports: [
    new winston.transports.Console()
  ],
});

async function testPuppeteerSteam() {
  let steamService = null;

  try {
    logger.info('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Steam Puppeteer Service...');

    // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
    logger.info('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Puppeteer...');

    steamService = new SteamPuppeteerService(steamBotConfig);
    await steamService.initialize();

    logger.info('‚úÖ Puppeteer –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

    // 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Steam
    logger.info('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');

    const loginResult = await steamService.login();

    if (loginResult) {
      logger.info('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
    } else {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      return;
    }

    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await steamService.takeScreenshot('after_login');

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∫–æ—à–µ–ª—å–∫–∞
    logger.info('üí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ Steam –∫–æ—à–µ–ª—å–∫–∞...');

    const balanceResult = await steamService.checkWalletBalance();

    if (balanceResult.success) {
      logger.info(`üí≥ –ë–∞–ª–∞–Ω—Å: ${balanceResult.balanceText}`);

      if (balanceResult.balance > 100) {
        logger.info('‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      } else {
        logger.warn('‚ö†Ô∏è –ú–∞–ª—ã–π –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫');
      }
    } else {
      logger.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å: ${balanceResult.message}`);
    }

    // 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (–±–µ–∑ –ø–æ–∫—É–ø–∫–∏)
    logger.info('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');

    const testItems = [
      'P250 | Sand Dune (Field-Tested)', // –î–µ—à–µ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤
      'Glock-18 | Water Elemental (Field-Tested)',
      'AK-47 | Redline (Field-Tested)'
    ];

    for (const item of testItems) {
      logger.info(`üéØ –ü–æ–∏—Å–∫: ${item}`);

      try {
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–µ–¥–º–µ—Ç–∞ –±–µ–∑ –ø–æ–∫—É–ø–∫–∏
        const marketUrl = `https://steamcommunity.com/market/listings/730/${encodeURIComponent(item)}`;
        await steamService.page.goto(marketUrl, { waitUntil: 'networkidle2' });

        await steamService.delay(3000);

        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        const listings = await steamService.page.$$('#searchResultsRows .market_listing_row');

        if (listings.length > 0) {
          logger.info(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${listings.length} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π`);

          // –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—ã –ø–µ—Ä–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
          for (let i = 0; i < Math.min(listings.length, 3); i++) {
            try {
              const listing = listings[i];
              const priceElement = await listing.$('.market_listing_price');

              if (priceElement) {
                const priceText = await priceElement.evaluate(el => el.textContent.trim());
                const price = steamService.parsePrice(priceText);

                logger.info(`   ${i + 1}. ${priceText} (${price} —Ä—É–±.)`);
              }
            } catch (err) {
              logger.warn(`   –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ${i + 1}`);
            }
          }
        } else {
          logger.warn(`‚ùå –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è: ${item}`);
        }

        // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        await steamService.takeScreenshot(`item_${item.replace(/[^a-zA-Z0-9]/g, '_')}`);

      } catch (error) {
        logger.error(`–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ ${item}: ${error.message}`);
      }

      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–∏—Å–∫–æ–º —Ä–∞–∑–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
      await steamService.delay(3000);
    }

    // 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º
    logger.info('üéí –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è...');

    try {
      await steamService.page.goto('https://steamcommunity.com/my/inventory/', {
        waitUntil: 'networkidle2'
      });

      await steamService.delay(5000);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
      const items = await steamService.page.$$('.item.app730.context2');

      if (items.length > 0) {
        logger.info(`‚úÖ –í –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –Ω–∞–π–¥–µ–Ω–æ ${items.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ CS2`);

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö
        for (let i = 0; i < Math.min(items.length, 5); i++) {
          try {
            const item = items[i];
            const itemName = await item.$eval('.item_desc_content .item_desc_game_info',
              el => el.textContent.trim()
            ).catch(() => '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç');

            logger.info(`   ${i + 1}. ${itemName}`);
          } catch (err) {
            logger.info(`   ${i + 1}. –ü—Ä–µ–¥–º–µ—Ç #${i + 1}`);
          }
        }
      } else {
        logger.warn('‚ö†Ô∏è –í –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ CS2');
        logger.info('üí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è trade offers –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å');
      }

      // –°–∫—Ä–∏–Ω—à–æ—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
      await steamService.takeScreenshot('inventory');

    } catch (error) {
      logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è: ${error.message}`);
    }

    // 6. –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    logger.info('');
    logger.info('üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    logger.info('');

    const results = {
      puppeteerInit: true,
      steamLogin: loginResult,
      walletCheck: balanceResult.success,
      itemSearch: true, // –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–ª
      inventoryAccess: true
    };

    const successCount = Object.values(results).filter(Boolean).length;
    const totalTests = Object.keys(results).length;

    logger.info(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${successCount}/${totalTests}`);
    logger.info('');

    if (successCount === totalTests) {
      logger.info('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
      logger.info('');
      logger.info('üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:');
      logger.info('1. ‚úÖ Puppeteer –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      logger.info('2. ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Steam —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç');
      logger.info('3. ‚úÖ –î–æ—Å—Ç—É–ø –∫ Steam Market –µ—Å—Ç—å');
      logger.info('4. ‚úÖ –ê–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
      logger.info('5. ‚úÖ –î–æ—Å—Ç—É–ø –∫ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—é –µ—Å—Ç—å');
      logger.info('');
      logger.info('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      logger.info('- –ü–æ–ø–æ–ª–Ω–∏—Ç–µ Steam –∫–æ—à–µ–ª–µ–∫ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫');
      logger.info('- –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–∫—É–ø–∫—É –¥–µ—à–µ–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞');
      logger.info('- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π withdrawal –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä');
    } else {
      logger.warn('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏');
      logger.warn('');
      logger.warn('üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
      if (!results.puppeteerInit) logger.warn('- –£—Å—Ç–∞–Ω–æ–≤–∫—É Puppeteer');
      if (!results.steamLogin) logger.warn('- –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Steam');
      if (!results.walletCheck) logger.warn('- –î–æ—Å—Ç—É–ø –∫ Steam –∫–æ—à–µ–ª—å–∫—É');
      if (!results.itemSearch) logger.warn('- –î–æ—Å—Ç—É–ø –∫ Steam Market');
      if (!results.inventoryAccess) logger.warn('- –î–æ—Å—Ç—É–ø –∫ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—é');
    }

  } catch (error) {
    logger.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    if (steamService) {
      logger.info('üõë –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞...');
      await steamService.shutdown();
    }
  }
}

// –¢–µ—Å—Ç –ø–æ–∫—É–ø–∫–∏ (–û–°–¢–û–†–û–ñ–ù–û - —Ç—Ä–∞—Ç–∏—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏!)
async function testRealPurchase(itemName) {
  let steamService = null;

  try {
    logger.warn('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Ç–µ—Å—Ç —Ç—Ä–∞—Ç–∏—Ç –†–ï–ê–õ–¨–ù–´–ï –¥–µ–Ω—å–≥–∏!');
    logger.warn('‚ö†Ô∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç!');
    logger.info(`üéØ –ü–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞: ${itemName}`);

    steamService = new SteamPuppeteerService(steamBotConfig);
    await steamService.initialize();
    await steamService.login();

    const purchaseResult = await steamService.searchAndBuyItem(itemName, 100); // –ú–∞–∫—Å–∏–º—É–º 100 —Ä—É–±–ª–µ–π

    if (purchaseResult.success) {
      logger.info('‚úÖ –ü—Ä–µ–¥–º–µ—Ç —É—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω!');
      logger.info(`üì¶ ${purchaseResult.item.name}`);
      logger.info(`üí∞ –¶–µ–Ω–∞: ${purchaseResult.item.priceText}`);
      logger.info(`üïê –í—Ä–µ–º—è: ${purchaseResult.item.purchaseTime}`);
    } else {
      logger.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏: ${purchaseResult.message}`);
    }

  } catch (error) {
    logger.error('üí• –û—à–∏–±–∫–∞:', error);
  } finally {
    if (steamService) {
      await steamService.shutdown();
    }
  }
}

// CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
if (require.main === module) {
  const command = process.argv[2];
  const itemName = process.argv.slice(3).join(' ');

  switch (command) {
    case 'test':
      testPuppeteerSteam();
      break;
    case 'buy':
      if (itemName) {
        testRealPurchase(itemName);
      } else {
        logger.error('‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏');
        logger.info('–ü—Ä–∏–º–µ—Ä: node test-puppeteer-steam.js buy "P250 | Sand Dune (Field-Tested)"');
      }
      break;
    default:
      logger.info('üìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
      logger.info('  node test-puppeteer-steam.js test                    - –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
      logger.info('  node test-puppeteer-steam.js buy "Item Name"         - –†–µ–∞–ª—å–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ (–¢–†–ê–¢–ò–¢ –î–ï–ù–¨–ì–ò!)');
      break;
  }
}

module.exports = { testPuppeteerSteam, testRealPurchase };
