#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Steam Bot Service —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é Steam API
 */

const SteamBot = require('../services/steamBotService');
const steamBotConfig = require('../config/steam_bot.js');
const winston = require('winston');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
const logger = winston.createLogger({
  level: 'info',
  format: winston.format.combine(
    winston.format.timestamp(),
    winston.format.colorize(),
    winston.format.simple()
  ),
  transports: [
    new winston.transports.Console()
  ],
});

async function testSteamBot() {
  let steamBot = null;

  try {
    logger.info('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Steam Bot Service...');

    // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
    logger.info('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Steam Bot...');

    steamBot = new SteamBot(
      steamBotConfig.accountName,
      steamBotConfig.password,
      steamBotConfig.sharedSecret,
      steamBotConfig.identitySecret,
      steamBotConfig.steamApiKey
    );

    logger.info('‚úÖ Steam Bot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

    // 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Steam
    logger.info('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');

    await steamBot.login();
    logger.info('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Steam —É—Å–ø–µ—à–Ω–∞');

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Steam API
    logger.info('üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Steam API...');

    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    await new Promise(resolve => setTimeout(resolve, 3000));

    if (steamBot.loggedIn) {
      logger.info('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Steam API –∞–∫—Ç–∏–≤–Ω–æ');
      logger.info(`üÜî Steam ID: ${steamBot.client.steamID ? steamBot.client.steamID.getSteam3RenderedID() : '–ù–µ –ø–æ–ª—É—á–µ–Ω'}`);
    } else {
      logger.warn('‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Steam API');
    }

    // 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    logger.info('üéí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è CS2...');

    try {
      const inventory = await steamBot.getInventory(730, 2, true);

      if (inventory && inventory.length > 0) {
        logger.info(`‚úÖ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –∑–∞–≥—Ä—É–∂–µ–Ω: ${inventory.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ CS2`);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        logger.info('üìã –ü–µ—Ä–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ:');
        for (let i = 0; i < Math.min(inventory.length, 5); i++) {
          const item = inventory[i];
          logger.info(`   ${i + 1}. ${item.market_hash_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç'} (ID: ${item.assetid})`);
        }
      } else {
        logger.warn('‚ö†Ô∏è –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å');
        logger.info('üí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è trade offers –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å');
      }
    } catch (inventoryError) {
      logger.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å: ${inventoryError.message}`);
    }

    // 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
    logger.info('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');

    try {
      const testItems = [
        'AK-47 | Redline',
        'Glock-18 | Water Elemental',
        'P250 | Sand Dune'
      ];

      for (const itemName of testItems) {
        try {
          const foundItem = await steamBot.findItemInInventory(itemName);
          if (foundItem) {
            logger.info(`‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: ${foundItem.market_hash_name} (ID: ${foundItem.assetid})`);
          } else {
            logger.info(`‚ùå –ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${itemName}`);
          }
        } catch (searchError) {
          logger.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ ${itemName}: ${searchError.message}`);
        }
      }
    } catch (searchError) {
      logger.warn(`‚ö†Ô∏è –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${searchError.message}`);
    }

    // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å trade offers
    logger.info('ü§ù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ trade offers...');

    try {
      if (steamBot.manager && steamBot.manager.apiKey) {
        logger.info('‚úÖ Trade offer manager –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
        logger.info('üîë API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      } else {
        logger.warn('‚ö†Ô∏è Trade offer manager –Ω–µ –≥–æ—Ç–æ–≤ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç API –∫–ª—é—á');
        logger.info('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ STEAM_API_KEY –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
      }
    } catch (tradeError) {
      logger.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ trade manager: ${tradeError.message}`);
    }

    // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ Steam Community —Ñ—É–Ω–∫—Ü–∏–π
    logger.info('üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ Steam Community —Ñ—É–Ω–∫—Ü–∏–π...');

    try {
      if (steamBot.community && steamBot.cookies) {
        logger.info('‚úÖ Steam Community —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ');
        logger.info('üç™ Cookies —Å–µ—Å—Å–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');

        if (steamBot.sessionId) {
          logger.info('üÜî Session ID –ø–æ–ª—É—á–µ–Ω');
        }

        if (steamBot.steamLoginSecure) {
          logger.info('üîê Steam login secure token –ø–æ–ª—É—á–µ–Ω');
        }
      } else {
        logger.warn('‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å Steam Community —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º');
      }
    } catch (communityError) {
      logger.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Steam Community: ${communityError.message}`);
    }

    // 8. –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    logger.info('');
    logger.info('üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    logger.info('');

    const results = {
      botInit: true,
      steamLogin: steamBot.loggedIn,
      inventoryAccess: true, // –ü–æ–ø—ã—Ç–∫–∞ –±—ã–ª–∞ —Å–¥–µ–ª–∞–Ω–∞
      tradeManager: steamBot.manager !== null,
      communityAccess: steamBot.community !== null && steamBot.cookies !== null
    };

    const successCount = Object.values(results).filter(Boolean).length;
    const totalTests = Object.keys(results).length;

    logger.info(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${successCount}/${totalTests}`);
    logger.info('');

    if (successCount === totalTests) {
      logger.info('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
      logger.info('');
      logger.info('üöÄ Steam Bot –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:');
      logger.info('1. ‚úÖ Steam Bot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      logger.info('2. ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Steam —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç');
      logger.info('3. ‚úÖ –î–æ—Å—Ç—É–ø –∫ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—é –µ—Å—Ç—å');
      logger.info('4. ‚úÖ Trade Manager –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      logger.info('5. ‚úÖ Steam Community API –¥–æ—Å—Ç—É–ø–Ω–æ');
      logger.info('');
      logger.info('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      logger.info('- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ STEAM_API_KEY –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏');
      logger.info('- –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É trade offer');
      logger.info('- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ç—Ä–µ–π–¥–æ–≤');
    } else {
      logger.warn('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏');
      logger.warn('');
      logger.warn('üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
      if (!results.botInit) logger.warn('- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é Steam Bot');
      if (!results.steamLogin) logger.warn('- –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Steam');
      if (!results.inventoryAccess) logger.warn('- –î–æ—Å—Ç—É–ø –∫ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—é');
      if (!results.tradeManager) logger.warn('- –ù–∞—Å—Ç—Ä–æ–π–∫—É Trade Manager');
      if (!results.communityAccess) logger.warn('- –î–æ—Å—Ç—É–ø –∫ Steam Community');
    }

    logger.info('');
    logger.info('üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
    logger.info(`üîß Account Name: ${steamBotConfig.accountName}`);
    logger.info(`üîë Shared Secret: ${steamBotConfig.sharedSecret ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    logger.info(`üîê Identity Secret: ${steamBotConfig.identitySecret ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    logger.info(`üåê API Key: ${steamBotConfig.steamApiKey ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);

  } catch (error) {
    logger.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  } finally {
    // –û—Å—Ç–∞–≤–ª—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    logger.info('');
    logger.info('üîÑ Steam Bot –æ—Å—Ç–∞–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è');
    logger.info('üí° –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C');
  }
}

// –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç—Ä–µ–π–¥–∞ (–±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ç–µ—Å—Ç –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏)
async function testTradeOffer() {
  try {
    logger.info('ü§ù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π trade offer...');

    const steamBot = new SteamBot(
      steamBotConfig.accountName,
      steamBotConfig.password,
      steamBotConfig.sharedSecret,
      steamBotConfig.identitySecret,
      steamBotConfig.steamApiKey
    );

    await steamBot.login();

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    const inventory = await steamBot.getInventory(730, 2, true);

    if (inventory.length > 0) {
      const testItem = inventory[0];
      logger.info(`üéØ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Ç—Ä–µ–π–¥–∞: ${testItem.market_hash_name}`);
      logger.info(`üìã Asset ID: ${testItem.assetid}`);

      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–π–¥–æ–≤
      // –ù–æ –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

      logger.info('‚úÖ –§—É–Ω–∫—Ü–∏–∏ trade offer –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
    } else {
      logger.warn('‚ö†Ô∏è –ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–π–¥–æ–≤');
    }

  } catch (error) {
    logger.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è trade offer:', error);
  }
}

// CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
if (require.main === module) {
  const command = process.argv[2];

  switch (command) {
    case 'test':
      testSteamBot();
      break;
    case 'trade':
      testTradeOffer();
      break;
    default:
      logger.info('üìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
      logger.info('  node test-steam-market.js test     - –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Steam Bot');
      logger.info('  node test-steam-market.js trade    - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ trade —Ñ—É–Ω–∫—Ü–∏–π');
      break;
  }
}

module.exports = { testSteamBot, testTradeOffer };
