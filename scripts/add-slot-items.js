const db = require('../models');

// üéØ –ü–†–û–°–¢–û –î–û–ë–ê–í–¨–¢–ï ID –ü–†–ï–î–ú–ï–¢–û–í –°–Æ–î–ê:
const ITEM_IDS = [
  '00d3ddfb-314e-4b09-a71b-51912945611f', // P250 | Metallic DDPAT (Battle-Scarred)
  '024447d7-095f-4e2f-b1b1-e3790e04ded8', // M4A1-S | Boreal Forest (Battle-Scarred)
  '050c98f4-aee6-47de-bfb0-cce4b4305923', // USP-S | Forest Leaves (Battle-Scarred)
  '14988199-8997-4b9b-a609-cf6ccdae9e40', // P250 | Sand Dune (Factory New)
  '1924d3d1-3fcf-4d36-8035-e4e9a43fc018', // AWP | Forest DDPAT (Battle-Scarred)
  '1b38d9da-aec6-487b-9747-261d4ac51588', // FAMAS | Blue Spraypaint (Factory New)
  '0c597eaf-b385-4501-a793-d87d1121e0e2', // Sawed-Off | Blue Spraypaint (Factory New)
  '0e5c997f-b699-43cc-b8c3-62ad3f04e1f7', // Sawed-Off | Blue Spraypaint (Factory New)
  '1157a376-bacf-43fb-b28b-abaeb57b443f', // Sawed-Off | Blue Spraypaint (Factory New)
  '12d81534-ab8a-49ad-a431-604ca46ffee2', // Sawed-Off | Blue Spraypaint (Factory New)
  '164c3dc2-8e6c-47cd-a6b5-46559e009738', // Sawed-Off | Blue Spraypaint (Factory New)
  '21c2d046-757b-4ac6-a902-ee10a063d06d',
  '28bee93e-c7f3-4bfd-9b5e-be465a201f62', // Sawed-Off | Blue Spraypaint (Factory New)
  '2a7026b3-ef66-4f56-9b5e-73c1bcb8e321', // Sawed-Off | Blue Spraypaint (Factory New)
  '33b1b049-bab1-449f-9b8d-302410d93e9d', // Sawed-Off | Blue Spraypaint (Factory New)
  '393b7673-a989-4a63-82e1-33137e9957ca', // Sawed-Off | Blue Spraypaint (Factory New)
  '39e86152-5210-4276-9d83-fb6cafced65b', // Sawed-Off | Blue Spraypaint (Factory New)
  '3c47cc31-27dc-4c73-826b-80c87b5fcba2', // Sawed-Off | Blue Spraypaint (Factory New)
  '341a7a25-6aa3-4cb4-a97f-69bed4fe33eb', // Sawed-Off | Blue Spraypaint (Factory New)

  // üëá –î–û–ë–ê–í–õ–Ø–ô–¢–ï –ù–û–í–´–ï ID –ó–î–ï–°–¨:

];

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–µ—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–µ–Ω—ã –ø—Ä–µ–¥–º–µ—Ç–∞
 */
function getDropWeight(price) {
  if (price < 10) return 10.0;     // –û—á–µ–Ω—å –¥–µ—à–µ–≤—ã–µ - –≤—ã—Å–æ–∫–∏–π –≤–µ—Å
  if (price < 50) return 8.0;      // –î–µ—à–µ–≤—ã–µ - –≤—ã—Å–æ–∫–∏–π –≤–µ—Å
  if (price < 200) return 5.0;     // –°—Ä–µ–¥–Ω–∏–µ - —Å—Ä–µ–¥–Ω–∏–π –≤–µ—Å
  if (price < 500) return 3.0;     // –î–æ—Ä–æ–≥–∏–µ - –Ω–∏–∑–∫–∏–π –≤–µ—Å
  if (price < 1500) return 1.0;    // –û—á–µ–Ω—å –¥–æ—Ä–æ–≥–∏–µ - –æ—á–µ–Ω—å –Ω–∏–∑–∫–∏–π –≤–µ—Å
  return 0.5;                      // –£–ª—å—Ç—Ä–∞-–¥–æ—Ä–æ–≥–∏–µ - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –≤ —Å–ª–æ—Ç-–∏–≥—Ä—É
 */
async function addItemsToSlot() {
  try {
    console.log('üé∞ –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Å–ª–æ—Ç-–∏–≥—Ä—É...\n');

    let successCount = 0;
    let errorCount = 0;
    let notFoundCount = 0;

    for (const itemId of ITEM_IDS) {
      try {
        console.log(`üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${itemId}`);

        // –ù–∞–π—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        const item = await db.Item.findByPk(itemId);

        if (!item) {
          console.log(`‚ùå –ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${itemId}`);
          notFoundCount++;
          continue;
        }

        // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è
        const price = parseFloat(item.price) || 0;
        const dropWeight = getDropWeight(price);

        // –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Å–ª–æ—Ç–∞
        await item.update({
          origin: 'slot_machine',
          drop_weight: dropWeight,
          is_available: true,
          in_stock: true
        });

        console.log(`‚úÖ ${item.name} (${price}‚ÇΩ) - –≤–µ—Å: ${dropWeight}`);
        successCount++;

      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å ${itemId}:`, error.message);
        errorCount++;
      }
    }

    console.log(`\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç:`);
    console.log(`  ‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: ${successCount}`);
    console.log(`  ‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
    console.log(`  üîç –ù–µ –Ω–∞–π–¥–µ–Ω–æ: ${notFoundCount}`);
    console.log(`  üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${ITEM_IDS.length}`);

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Å–ª–æ—Ç–µ:');
    await showSlotStats();

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  } finally {
    await db.sequelize.close();
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Å–ª–æ—Ç–µ
 */
async function showSlotStats() {
  try {
    const slotItems = await db.Item.findAll({
      where: {
        origin: 'slot_machine',
        is_available: true
      },
      attributes: ['name', 'price', 'rarity', 'drop_weight'],
      order: [['price', 'ASC']]
    });

    const cheapItems = slotItems.filter(item => item.price <= 50);
    const mediumItems = slotItems.filter(item => item.price > 50 && item.price <= 500);
    const expensiveItems = slotItems.filter(item => item.price > 500);

    console.log(`üí∞ –î–µ—à–µ–≤—ã–µ (–¥–æ 50‚ÇΩ): ${cheapItems.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);
    console.log(`üíé –°—Ä–µ–¥–Ω–∏–µ (51-500‚ÇΩ): ${mediumItems.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);
    console.log(`üèÜ –î–æ—Ä–æ–≥–∏–µ (500‚ÇΩ+): ${expensiveItems.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);
    console.log(`üìà –û–±—â–∏–π –≤–µ—Å: ${slotItems.reduce((sum, item) => sum + parseFloat(item.drop_weight || 0), 0)}`);

    // –¢–æ–ø-5 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    const topExpensive = slotItems.slice(-5).reverse();
    console.log('\nüèÜ –°–∞–º—ã–µ –¥–æ—Ä–æ–≥–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Å–ª–æ—Ç–µ:');
    topExpensive.forEach((item, index) => {
      console.log(`  ${index + 1}. ${item.name} - ${item.price}‚ÇΩ (–≤–µ—Å: ${item.drop_weight})`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Å–ª–æ—Ç...');
  console.log(`üìù –ü—Ä–µ–¥–º–µ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ: ${ITEM_IDS.length}\n`);
  addItemsToSlot();
}

module.exports = { addItemsToSlot, ITEM_IDS };
