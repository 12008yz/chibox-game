const db = require('../models');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∫–µ–π—Å–æ–≤ –∏ –∏—Ö origin
const CASE_ITEM_MAPPING = {
  '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–µ–π—Å (–£—Ä–æ–≤–µ–Ω—å 1)': 'subscription_case',
  '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–µ–π—Å (–£—Ä–æ–≤–µ–Ω—å 2)': 'subscription_case',
  '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–µ–π—Å (–£—Ä–æ–≤–µ–Ω—å 3)': 'subscription_case',
  '–ü–æ–∫—É–ø–Ω–æ–π –∫–µ–π—Å': 'purchase_case',
  '–ü—Ä–µ–º–∏—É–º –∫–µ–π—Å': 'premium_case'
};

async function linkItemsToCaseTemplates() {
  try {
    console.log('üîó –ù–∞—á–∏–Ω–∞–µ–º —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –∫–µ–π—Å–æ–≤...\n');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –∫–µ–π—Å–æ–≤
    const caseTemplates = await db.CaseTemplate.findAll({
      where: {
        is_active: true
      }
    });

    if (caseTemplates.length === 0) {
      console.log('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –∫–µ–π—Å–æ–≤');
      return;
    }

    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${caseTemplates.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –∫–µ–π—Å–æ–≤\n`);

    // –°–≤—è–∑—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —à–∞–±–ª–æ–Ω –∫–µ–π—Å–∞ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
    for (const template of caseTemplates) {
      console.log(`\nüéØ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–µ–π—Å: ${template.name}`);

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º origin –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–µ–π—Å–∞
      let originPattern = CASE_ITEM_MAPPING[template.name];

      if (!originPattern) {
        // –ï—Å–ª–∏ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–µ—Ç, –ø—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ —Ç–∏–ø—É
        if (template.name.includes('–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π') || template.type === 'daily') {
          originPattern = 'subscription_case';
        } else if (template.name.includes('–ü–æ–∫—É–ø–Ω–æ–π') || template.price && template.price <= 150) {
          originPattern = 'purchase_case';
        } else if (template.name.includes('–ü—Ä–µ–º–∏—É–º') || template.price && template.price > 150) {
          originPattern = 'premium_case';
        } else {
          console.warn(`‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –¥–ª—è –∫–µ–π—Å–∞: ${template.name}, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã`);
          originPattern = null;
        }
      }

      // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –∫–µ–π—Å–∞
      let whereClause = { is_available: true };
      if (originPattern) {
        whereClause.origin = originPattern;
      }

      const items = await db.Item.findAll({
        where: whereClause
      });

      if (items.length === 0) {
        console.log(`   ‚ùå –ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å origin: ${originPattern}`);
        continue;
      }

      console.log(`   üìã –ù–∞–π–¥–µ–Ω–æ ${items.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è`);

      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞
      const itemsByRarity = {};
      items.forEach(item => {
        if (!itemsByRarity[item.rarity]) {
          itemsByRarity[item.rarity] = 0;
        }
        itemsByRarity[item.rarity]++;
      });

      console.log('   üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏:');
      Object.entries(itemsByRarity).forEach(([rarity, count]) => {
        console.log(`      ${rarity}: ${count} –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);
      });

      // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Å–≤—è–∑–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
      await template.setItems([]);
      await template.addItems(items);

      console.log(`   ‚úÖ –°–≤—è–∑–∞–Ω–æ ${items.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –∫–µ–π—Å–æ–º: ${template.name}`);
    }

    console.log('\nüéâ –°–≤—è–∑—ã–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –∫–µ–π—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await validateCaseItems();

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –∫–µ–π—Å–∞–º–∏:', error);
    throw error;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è
async function validateCaseItems() {
  console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –°–í–Ø–ó–´–í–ê–ù–ò–Ø:\n');

  const caseTemplates = await db.CaseTemplate.findAll({
    where: { is_active: true },
    include: [{
      model: db.Item,
      as: 'items',
      through: { attributes: [] }
    }]
  });

  for (const template of caseTemplates) {
    console.log(`üì¶ ${template.name}:`);
    console.log(`   –í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${template.items.length}`);

    if (template.items.length === 0) {
      console.log('   ‚ùå –ù–ï–¢ –ü–†–ï–î–ú–ï–¢–û–í! –ö–µ–π—Å –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.');
      continue;
    }

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
    const rarityCount = {};
    template.items.forEach(item => {
      if (!rarityCount[item.rarity]) {
        rarityCount[item.rarity] = 0;
      }
      rarityCount[item.rarity]++;
    });

    console.log('   –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏:');
    Object.entries(rarityCount).forEach(([rarity, count]) => {
      console.log(`      ${rarity}: ${count}`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω
    const prices = template.items.map(item => parseFloat(item.price)).filter(p => p > 0);
    if (prices.length > 0) {
      const minPrice = Math.min(...prices);
      const maxPrice = Math.max(...prices);
      const avgPrice = prices.reduce((sum, p) => sum + p, 0) / prices.length;
      console.log(`   –¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω: ‚ÇΩ${minPrice.toFixed(2)} - ‚ÇΩ${maxPrice.toFixed(2)} (—Å—Ä–µ–¥–Ω—è—è: ‚ÇΩ${avgPrice.toFixed(2)})`);
    }

    console.log('   ‚úÖ –ö–µ–π—Å –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é\n');
  }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  linkItemsToCaseTemplates()
    .then(() => {
      console.log('\n‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\n‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error);
      process.exit(1);
    })
    .finally(() => {
      db.sequelize.close();
    });
}

module.exports = {
  linkItemsToCaseTemplates,
  validateCaseItems
};
