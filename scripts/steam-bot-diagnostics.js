#!/usr/bin/env node

/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è Steam –±–æ—Ç–∞
 * –ü–æ–º–æ–≥–∞–µ—Ç –≤—ã—è–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π, —Ç–æ—Ä–≥–æ–≤–ª–µ–π –∏ API
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
require('dotenv').config();

const SteamBot = require('../services/steamBotService');
const steamBotConfig = require('../config/steam_bot.js');
const winston = require('winston');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
const logger = winston.createLogger({
  level: 'info',
  format: winston.format.combine(
    winston.format.timestamp(),
    winston.format.colorize(),
    winston.format.printf(({ timestamp, level, message }) => {
      return `[${timestamp}] ${level}: ${message}`;
    })
  ),
  transports: [
    new winston.transports.Console()
  ],
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Steam –±–æ—Ç–∞
const steamBot = new SteamBot(
  steamBotConfig.accountName,
  steamBotConfig.password,
  steamBotConfig.sharedSecret,
  steamBotConfig.identitySecret,
  steamBotConfig.steamApiKey
);

async function runDiagnostics() {
  try {
    logger.info('üîç –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Steam –±–æ—Ç–∞...');

    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    logger.info('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');

    if (!steamBotConfig.accountName) {
      logger.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç STEAM_ACCOUNT_NAME');
      return;
    }

    if (!steamBotConfig.password) {
      logger.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç STEAM_PASSWORD');
      return;
    }

    if (!steamBotConfig.sharedSecret) {
      logger.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç STEAM_SHARED_SECRET');
      return;
    }

    if (!steamBotConfig.identitySecret) {
      logger.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç STEAM_IDENTITY_SECRET');
      return;
    }

    logger.info('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞');

    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    logger.info('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');

    try {
      await steamBot.login();
      logger.info('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
    } catch (loginError) {
      logger.error(`‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${loginError.message}`);
      return;
    }

    // 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ñ–∏–ª–µ
    logger.info('üë§ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ñ–∏–ª–µ –±–æ—Ç–∞...');

    try {
      const profileInfo = await steamBot.getProfileInfo();
      logger.info(`‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –±–æ—Ç–∞: ${JSON.stringify(profileInfo, null, 2)}`);

      if (!profileInfo.loggedIn) {
        logger.warn('‚ö†Ô∏è –ë–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á—Ç–æ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      if (profileInfo.wallet && profileInfo.wallet.balance) {
        logger.info(`üí∞ –ë–∞–ª–∞–Ω—Å Steam –∫–æ—à–µ–ª—å–∫–∞: ${profileInfo.wallet.balance} ${profileInfo.wallet.currency === 37 ? 'RUB' : 'USD'}`);
      }

    } catch (profileError) {
      logger.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ${profileError.message}`);
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    logger.info('üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π...');

    try {
      const restrictions = await steamBot.getTradeRestrictions();
      logger.info(`üìä –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: ${JSON.stringify(restrictions, null, 2)}`);

      if (!restrictions.canTrade) {
        logger.error('‚ùå –£ –±–æ—Ç–∞ –µ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ —Ç–æ—Ä–≥–æ–≤–ª—é!');
        logger.info('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        logger.info('   - Steam Guard –∞–∫—Ç–∏–≤–µ–Ω –º–µ–Ω–µ–µ 7 –¥–Ω–µ–π');
        logger.info('   - –ù–µ–¥–∞–≤–Ω—è—è —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –∏–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞');
        logger.info('   - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ—Ç Steam Support');
        return;
      }

      if (restrictions.tradeHold) {
        logger.warn('‚ö†Ô∏è –£ –±–æ—Ç–∞ –∞–∫—Ç–∏–≤–µ–Ω trade hold');
      }

      logger.info('‚úÖ –¢–æ—Ä–≥–æ–≤—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ –ø–æ—Ä—è–¥–∫–µ');

    } catch (restrictionError) {
      logger.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π: ${restrictionError.message}`);
    }

    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    logger.info('üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è...');

    try {
      const inventory = await steamBot.getInventory(730, 2, true);
      logger.info(`‚úÖ –í –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –Ω–∞–π–¥–µ–Ω–æ ${inventory.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ CS2`);

      if (inventory.length > 0) {
        logger.info('üìã –ü–µ—Ä–≤—ã–µ 5 –ø—Ä–µ–¥–º–µ—Ç–æ–≤:');
        inventory.slice(0, 5).forEach((item, index) => {
          logger.info(`   ${index + 1}. ${item.market_hash_name} (${item.assetid})`);
        });
      } else {
        logger.warn('‚ö†Ô∏è –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç');
      }

    } catch (inventoryError) {
      logger.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è: ${inventoryError.message}`);
    }

    // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ Confirmation Checker
    logger.info('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ Confirmation Checker...');

    try {
      const checkerStatus = await steamBot.getConfirmationCheckerStatus();
      logger.info(`üìä –°—Ç–∞—Ç—É—Å Confirmation Checker: ${JSON.stringify(checkerStatus, null, 2)}`);

      if (!checkerStatus.ready) {
        logger.warn('‚ö†Ô∏è Confirmation Checker –Ω–µ –≥–æ—Ç–æ–≤');
      } else {
        logger.info('‚úÖ Confirmation Checker —Ä–∞–±–æ—Ç–∞–µ—Ç');
      }

    } catch (checkerError) {
      logger.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Confirmation Checker: ${checkerError.message}`);
    }

    // 7. –¢–µ—Å—Ç Steam API
    logger.info('üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Steam API...');

    try {
      const apiTest = await steamBot.testSteamApi();
      if (apiTest.success) {
        logger.info('‚úÖ Steam API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      } else {
        logger.error(`‚ùå –û—à–∏–±–∫–∞ Steam API: ${apiTest.message}`);
      }
    } catch (apiError) {
      logger.error(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: ${apiError.message}`);
    }

    // 8. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è Trade Offer
    logger.info('üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è Trade Offer...');

    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π Steam ID –¥–ª—è —Ç–µ—Å—Ç–∞
      const testResult = await steamBot.testTradeOfferCreation(steamBot.client.steamID);
      if (testResult.success) {
        logger.info('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ Trade Offer —Ä–∞–±–æ—Ç–∞–µ—Ç');
      } else {
        logger.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Trade Offer: ${testResult.message}`);
      }
    } catch (testError) {
      logger.error(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Trade Offer: ${testError.message}`);
    }

    // 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π –ø–∞–∫–µ—Ç–æ–≤
    logger.info('üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π Steam –ø–∞–∫–µ—Ç–æ–≤...');

    try {
      const packageJson = require('../package.json');
      const steamPackages = [
        'steam-user',
        'steamcommunity',
        'steam-tradeoffer-manager',
        'steam-totp'
      ];

      steamPackages.forEach(pkg => {
        if (packageJson.dependencies[pkg]) {
          logger.info(`   ${pkg}: ${packageJson.dependencies[pkg]}`);
        } else {
          logger.warn(`‚ö†Ô∏è –ü–∞–∫–µ—Ç ${pkg} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ dependencies`);
        }
      });

    } catch (packageError) {
      logger.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–∫–µ—Ç–æ–≤: ${packageError.message}`);
    }

    // 10. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    logger.info('üèÅ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è...');

    const finalCheck = {
      authenticated: steamBot.loggedIn,
      sessionValid: steamBot.isSessionValid(),
      managerReady: !!steamBot.manager,
      communityReady: !!steamBot.community
    };

    logger.info(`üìä –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${JSON.stringify(finalCheck, null, 2)}`);

    if (finalCheck.authenticated && finalCheck.sessionValid && finalCheck.managerReady) {
      logger.info('üéâ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
    } else {
      logger.error('‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º');
    }

  } catch (error) {
    logger.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  } finally {
    // –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    try {
      await steamBot.shutdown();
    } catch (shutdownError) {
      logger.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞:', shutdownError.message);
    }
    process.exit(0);
  }
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
runDiagnostics();
