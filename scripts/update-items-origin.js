const db = require('../models');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –∫–µ–π—Å–æ–≤
async function linkItemsToCaseTemplates() {
  console.log('\nüîó –°–≤—è–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –∫–µ–π—Å–æ–≤...\n');

  try {
    const caseTemplates = await db.CaseTemplate.findAll({
      where: { is_active: true }
    });

    // –ü–æ–ª—É—á–∞–µ–º –í–°–ï –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    const allItems = await db.Item.findAll({
      where: { is_available: true }
    });

    console.log(`üìä –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${allItems.length}\n`);

    for (const template of caseTemplates) {
      console.log(`üéØ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–µ–π—Å: ${template.name}`);

      let items = [];

      // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ –∫–µ–π—Å–∞–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö —Ü–µ–Ω—ã
      switch(template.name) {
        case '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–µ–π—Å - –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π':
          // –î–µ—à–µ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã (–¥–æ 50‚ÇΩ)
          items = allItems.filter(item => item.price <= 50);
          break;

        case '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–µ–π—Å - –°—Ç–∞—Ç—É—Å':
          // –î–µ—à–µ–≤—ã–µ –∏ —Å—Ä–µ–¥–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã (–¥–æ 150‚ÇΩ)
          items = allItems.filter(item => item.price <= 150);
          break;

        case '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–µ–π—Å - –°—Ç–∞—Ç—É—Å+':
          // –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã (–¥–æ 800‚ÇΩ)
          items = allItems.filter(item => item.price <= 800);
          break;

        case '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–µ–π—Å - –°—Ç–∞—Ç—É—Å++':
          // –î–æ—Ä–æ–≥–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã (–¥–æ 5000‚ÇΩ)
          items = allItems.filter(item => item.price <= 5000);
          break;

        case '–ë–æ–Ω—É—Å–Ω—ã–π –∫–µ–π—Å':
          // –°—Ä–µ–¥–Ω–∏–µ –∏ —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã (30‚ÇΩ - 1000‚ÇΩ)
          items = allItems.filter(item => item.price >= 30 && item.price <= 1000);
          break;

        case '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–µ–π—Å':
          // –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –ø–æ–∫—É–ø–Ω–æ–≥–æ –∫–µ–π—Å–∞ (30‚ÇΩ - 500‚ÇΩ)
          items = allItems.filter(item => item.price >= 30 && item.price <= 500);
          break;

        case '–ü—Ä–µ–º–∏—É–º –∫–µ–π—Å':
          // –î–æ—Ä–æ–≥–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã (–æ—Ç 100‚ÇΩ)
          items = allItems.filter(item => item.price >= 100);
          break;

        default:
          console.warn(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–µ–π—Å: ${template.name}`);
          continue;
      }

      if (items.length === 0) {
        console.log(`   ‚ùå –ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –∫–µ–π—Å–∞: ${template.name}`);
        continue;
      }

      // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–≤—è–∑–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
      await template.setItems([]);
      await template.addItems(items);

      console.log(`   ‚úÖ –°–≤—è–∑–∞–Ω–æ ${items.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –∫–µ–π—Å–æ–º: ${template.name}`);
    }

    console.log('\nüéâ –°–≤—è–∑—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –∫–µ–π—Å–∞–º–∏:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  linkItemsToCaseTemplates()
    .then(() => {
      console.log('\n‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      process.exit(0);
    })
    .catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { linkItemsToCaseTemplates };
