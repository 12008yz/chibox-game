// –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–æ–≤ userController

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–æ–≤ userController...\n');

try {
  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–µ—Å—å userController
  const userController = require('./controllers/user/userController');

  console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —ç–∫—Å–ø–æ—Ä—Ç—ã –∏–∑ userController:');

  const expectedExports = [
    'registerValidation',
    'register',
    'login',
    'getProfile',
    'updateProfile',
    'logout',
    'getInventory',
    'openCase',
    'sellItem',
    'withdrawItem',
    'getCases',
    'getBalance',
    'applyPromo',
    'getTransactions',
    'deposit',
    'withdrawBalance',
    'getAchievements',
    'getMissions',
    'getStatistics',
    'getLeaderboard',
    'getNotifications',
    'getPublicProfile',
    'buySubscription',
    'getSubscription',
    'exchangeItemForSubscription',
    'playBonusSquares',
    'getBonusStatus',
    'getCasesAvailable',
    'getAchievementsProgress',
    'buyCase',
    'getCasePurchaseInfo'
  ];

  expectedExports.forEach(exportName => {
    if (userController[exportName]) {
      console.log(`‚úÖ ${exportName}: ${typeof userController[exportName]}`);
    } else {
      console.log(`‚ùå ${exportName}: undefined –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
    }
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã
  console.log('\nüìã –í—Å–µ —ç–∫—Å–ø–æ—Ä—Ç—ã –∏–∑ userController:');
  Object.keys(userController).forEach(key => {
    console.log(`- ${key}: ${typeof userController[key]}`);
  });

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ userController:', error.message);
  console.error('üîç –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
}
