// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–∏–¥–µ—Ä–æ–≤
require('dotenv').config();
const { Sequelize } = require('sequelize');

const dbConfig = {
  username: String(process.env.DB_USERNAME || 'postgres'),
  password: String(process.env.DB_PASSWORD || ''),
  database: String(process.env.DB_DATABASE || 'chibox-game'),
  host: String(process.env.DB_HOST || '127.0.0.1'),
  dialect: String(process.env.DB_DIALECT || 'postgres')
};

const db = new Sequelize(dbConfig.database, dbConfig.username, dbConfig.password, {
  host: dbConfig.host,
  dialect: dbConfig.dialect,
  logging: console.log
});

async function clearSeederData() {
  console.log('üßπ –û–ß–ò–°–¢–ö–ê –î–ê–ù–ù–´–• –°–ò–î–ï–†–û–í');
  console.log('='.repeat(40));

  try {
    await db.authenticate();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (—É—á–∏—Ç—ã–≤–∞—è –≤–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏)
    const tables = [
      'case_template_items',  // –°–Ω–∞—á–∞–ª–∞ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
      'case_templates',       // –ó–∞—Ç–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ
      'achievements',
      'promo_codes',
      'level_settings'
    ];

    for (const table of tables) {
      try {
        const result = await db.query(`DELETE FROM ${table} WHERE 1=1;`);
        console.log(`‚úÖ –û—á–∏—â–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: ${table}`);
      } catch (error) {
        console.log(`‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ ${table}: ${error.message}`);
      }
    }

    // –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É SequelizeData (–º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–∏–¥–µ—Ä–æ–≤)
    try {
      await db.query(`DELETE FROM "SequelizeData" WHERE name LIKE '%seeder%';`);
      console.log('‚úÖ –û—á–∏—â–µ–Ω—ã –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–∏–¥–µ—Ä–æ–≤');
    } catch (error) {
      console.log('‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ SequelizeData –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)');
    }

    console.log('\nüéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–¥–µ—Ä—ã –∑–∞–Ω–æ–≤–æ.');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await db.close();
  }
}

clearSeederData().catch(console.error);
