const passport = require('passport');
const SteamStrategy = require('passport-steam').Strategy;
const db = require('../models');
const { logger } = require('../utils/logger');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Steam OAuth
const STEAM_API_KEY = process.env.STEAM_API_KEY;
const STEAM_RETURN_URL = process.env.STEAM_RETURN_URL || 'http://localhost:3000/auth/steam/return';
const STEAM_REALM = process.env.STEAM_REALM || 'http://localhost:3000/';

if (!STEAM_API_KEY) {
  logger.warn('STEAM_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. Steam –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.');
}

// –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–µ—Å—Å–∏–π
passport.serializeUser((user, done) => {
  done(null, user.id);
});

passport.deserializeUser(async (id, done) => {
  try {
    const user = await db.User.findByPk(id, {
      attributes: { exclude: ['password'] }
    });
    done(null, user);
  } catch (error) {
    done(error, null);
  }
});

// Steam OAuth —Å—Ç—Ä–∞—Ç–µ–≥–∏—è
if (STEAM_API_KEY) {
  passport.use(new SteamStrategy({
    returnURL: STEAM_RETURN_URL,
    realm: STEAM_REALM,
    apiKey: STEAM_API_KEY
  },
  async (identifier, profile, done) => {
    try {
      const steamId = identifier.split('/').pop();

      logger.info('Steam OAuth callback:', {
        steamId,
        displayName: profile.displayName,
        username: profile._json?.personaname
      });

      // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Steam ID
      let user = await db.User.findOne({
        where: { steam_id: steamId }
      });

      if (user) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
        const avatarUrl = profile._json?.avatarfull || profile._json?.avatarmedium || profile._json?.avatar;
        const newUsername = profile._json?.personaname || user.username;

        console.log('üîÑ Updating existing user Steam data:', {
          userId: user.id,
          currentUsername: user.username,
          newUsername: newUsername,
          steamId,
          avatarUrl,
          profileUrl: profile._json?.profileurl,
          displayName: profile.displayName,
          fullProfile: profile._json
        });

        const updateData = {
          username: newUsername,
          steam_profile: profile._json,
          steam_avatar_url: avatarUrl,
          steam_profile_url: profile._json?.profileurl,
          last_login_date: new Date()
        };

        console.log('üìù Update data:', updateData);

        await user.update(updateData);

        console.log('‚úÖ Steam data updated successfully');
        logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.username} –≤–æ—à–µ–ª —á–µ—Ä–µ–∑ Steam, –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã`);
        return done(null, user);
      } else {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const username = profile._json?.personaname || `steam_user_${steamId.slice(-8)}`;
        const email = `${steamId}@steam.local`; // –í—Ä–µ–º–µ–Ω–Ω—ã–π email
        const avatarUrl = profile._json?.avatarfull || profile._json?.avatarmedium || profile._json?.avatar;

        console.log('Creating new Steam user:', {
          username,
          steamId,
          avatarUrl,
          profileUrl: profile._json?.profileurl,
          photos: profile.photos
        });

        user = await db.User.create({
          username: username,
          email: email,
          password: 'steam_oauth', // –ü–∞—Ä–æ–ª—å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è Steam –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          steam_id: steamId,
          steam_profile: profile._json,
          steam_avatar_url: avatarUrl,
          steam_profile_url: profile._json?.profileurl,
          auth_provider: 'steam',
          is_email_verified: true, // Steam –∞–∫–∫–∞—É–Ω—Ç—ã —Å—á–∏—Ç–∞–µ–º –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏
          last_login_date: new Date(),
          registration_date: new Date()
        });

        logger.info(`–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á–µ—Ä–µ–∑ Steam: ${username} (${steamId})`);
        return done(null, user);
      }
    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ Steam OAuth:', error);
      return done(error, null);
    }
  }));
}

module.exports = passport;
